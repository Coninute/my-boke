{
  "version": 3,
  "sources": ["../../.pnpm/small-queue@1.1.2/node_modules/small-queue/dist/queue.esm-bundler.js", "../../.pnpm/aidly@1.22.0/node_modules/aidly/dist/aidly.esm-bundler.js", "../../.pnpm/hooks-plugin@1.3.3/node_modules/hooks-plugin/dist/hooks.esm-bundler.js", "../../.pnpm/danmu@0.16.0/node_modules/danmu/dist/danmu.esm-bundler.js"],
  "sourcesContent": ["class Queue {\n  constructor() {\n    this._fx = [];\n    this._init = true;\n    this._lock = false;\n    this._finishDefers = new Set();\n  }\n  _next() {\n    if (!this._lock) {\n      this._lock = true;\n      if (this._fx.length === 0) {\n        this._init = true;\n        this._finishDefers.forEach((d) => d.resolve());\n        this._finishDefers.clear();\n      } else {\n        const fn = this._fx.shift();\n        if (fn) {\n          fn(() => {\n            this._lock = false;\n            this._next();\n          });\n        }\n      }\n    }\n  }\n  add(fn) {\n    this._fx.push(fn);\n    if (this._init) {\n      this._lock = false;\n      this._init = false;\n      this._next();\n    }\n  }\n  awaitFinish() {\n    if (this._init) return Promise.resolve();\n    const defer = {};\n    this._finishDefers.add(defer);\n    return new Promise((resolve) => {\n      defer.resolve = resolve;\n    });\n  }\n}\n\nexport { Queue };\n", "export { Queue } from 'small-queue';\n\n// https://github.com/validatorjs/validator.js/blob/master/src/lib/isMobilePhone.js\nconst phones = {\n  'zh-CN': /^((\\+|00)86)?(1[3-9]|9[28])\\d{9}$/,\n  'zh-TW': /^(\\+?886\\-?|0)?9\\d{8}$/,\n  'am-AM': /^(\\+?374|0)(33|4[134]|55|77|88|9[13-689])\\d{6}$/,\n  'ar-AE': /^((\\+?971)|0)?5[024568]\\d{7}$/,\n  'ar-BH': /^(\\+?973)?(3|6)\\d{7}$/,\n  'ar-DZ': /^(\\+?213|0)(5|6|7)\\d{8}$/,\n  'ar-LB': /^(\\+?961)?((3|81)\\d{6}|7\\d{7})$/,\n  'ar-EG': /^((\\+?20)|0)?1[0125]\\d{8}$/,\n  'ar-IQ': /^(\\+?964|0)?7[0-9]\\d{8}$/,\n  'ar-JO': /^(\\+?962|0)?7[789]\\d{7}$/,\n  'ar-KW': /^(\\+?965)([569]\\d{7}|41\\d{6})$/,\n  'ar-LY': /^((\\+?218)|0)?(9[1-6]\\d{7}|[1-8]\\d{7,9})$/,\n  'ar-MA': /^(?:(?:\\+|00)212|0)[5-7]\\d{8}$/,\n  'ar-OM': /^((\\+|00)968)?(9[1-9])\\d{6}$/,\n  'ar-PS': /^(\\+?970|0)5[6|9](\\d{7})$/,\n  'ar-SA': /^(!?(\\+?966)|0)?5\\d{8}$/,\n  'ar-SD': /^((\\+?249)|0)?(9[012369]|1[012])\\d{7}$/,\n  'ar-SY': /^(!?(\\+?963)|0)?9\\d{8}$/,\n  'ar-TN': /^(\\+?216)?[2459]\\d{7}$/,\n  'az-AZ': /^(\\+994|0)(10|5[015]|7[07]|99)\\d{7}$/,\n  'bs-BA': /^((((\\+|00)3876)|06))((([0-3]|[5-6])\\d{6})|(4\\d{7}))$/,\n  'be-BY': /^(\\+?375)?(24|25|29|33|44)\\d{7}$/,\n  'bg-BG': /^(\\+?359|0)?8[789]\\d{7}$/,\n  'bn-BD': /^(\\+?880|0)1[13456789][0-9]{8}$/,\n  'ca-AD': /^(\\+376)?[346]\\d{5}$/,\n  'cs-CZ': /^(\\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\n  'da-DK': /^(\\+?45)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'de-DE': /^((\\+49|0)1)(5[0-25-9]\\d|6([23]|0\\d?)|7([0-57-9]|6\\d))\\d{7,9}$/,\n  'de-AT': /^(\\+43|0)\\d{1,4}\\d{3,12}$/,\n  'de-CH': /^(\\+41|0)([1-9])\\d{1,9}$/,\n  'de-LU': /^(\\+352)?((6\\d1)\\d{6})$/,\n  'dv-MV': /^(\\+?960)?(7[2-9]|9[1-9])\\d{5}$/,\n  'el-GR': /^(\\+?30|0)?6(8[5-9]|9(?![26])[0-9])\\d{7}$/,\n  'el-CY': /^(\\+?357?)?(9(9|6)\\d{6})$/,\n  'en-AI':\n    /^(\\+?1|0)264(?:2(35|92)|4(?:6[1-2]|76|97)|5(?:3[6-9]|8[1-4])|7(?:2(4|9)|72))\\d{4}$/,\n  'en-AU': /^(\\+?61|0)4\\d{8}$/,\n  'en-AG': /^(?:\\+1|1)268(?:464|7(?:1[3-9]|[28]\\d|3[0246]|64|7[0-689]))\\d{4}$/,\n  'en-BM': /^(\\+?1)?441(((3|7)\\d{6}$)|(5[0-3][0-9]\\d{4}$)|(59\\d{5}$))/,\n  'en-BS': /^(\\+?1[-\\s]?|0)?\\(?242\\)?[-\\s]?\\d{3}[-\\s]?\\d{4}$/,\n  'en-GB': /^(\\+?44|0)7[1-9]\\d{8}$/,\n  'en-GG': /^(\\+?44|0)1481\\d{6}$/,\n  'en-GH': /^(\\+233|0)(20|50|24|54|27|57|26|56|23|28|55|59)\\d{7}$/,\n  'en-GY': /^(\\+592|0)6\\d{6}$/,\n  'en-HK': /^(\\+?852[-\\s]?)?[456789]\\d{3}[-\\s]?\\d{4}$/,\n  'en-MO': /^(\\+?853[-\\s]?)?[6]\\d{3}[-\\s]?\\d{4}$/,\n  'en-IE': /^(\\+?353|0)8[356789]\\d{7}$/,\n  'en-IN': /^(\\+?91|0)?[6789]\\d{9}$/,\n  'en-JM': /^(\\+?876)?\\d{7}$/,\n  'en-KE': /^(\\+?254|0)(7|1)\\d{8}$/,\n  'fr-CF': /^(\\+?236| ?)(70|75|77|72|21|22)\\d{6}$/,\n  'en-SS': /^(\\+?211|0)(9[1257])\\d{7}$/,\n  'en-KI': /^((\\+686|686)?)?( )?((6|7)(2|3|8)[0-9]{6})$/,\n  'en-KN': /^(?:\\+1|1)869(?:46\\d|48[89]|55[6-8]|66\\d|76[02-7])\\d{4}$/,\n  'en-LS': /^(\\+?266)(22|28|57|58|59|27|52)\\d{6}$/,\n  'en-MT': /^(\\+?356|0)?(99|79|77|21|27|22|25)[0-9]{6}$/,\n  'en-MU': /^(\\+?230|0)?\\d{8}$/,\n  'en-MW':\n    /^(\\+?265|0)(((77|88|31|99|98|21)\\d{7})|(((111)|1)\\d{6})|(32000\\d{4}))$/,\n  'en-NA': /^(\\+?264|0)(6|8)\\d{7}$/,\n  'en-NG': /^(\\+?234|0)?[789]\\d{9}$/,\n  'en-NZ': /^(\\+?64|0)[28]\\d{7,9}$/,\n  'en-PG': /^(\\+?675|0)?(7\\d|8[18])\\d{6}$/,\n  'en-PK': /^((00|\\+)?92|0)3[0-6]\\d{8}$/,\n  'en-PH': /^(09|\\+639)\\d{9}$/,\n  'en-RW': /^(\\+?250|0)?[7]\\d{8}$/,\n  'en-SG': /^(\\+65)?[3689]\\d{7}$/,\n  'en-SL': /^(\\+?232|0)\\d{8}$/,\n  'en-TZ': /^(\\+?255|0)?[67]\\d{8}$/,\n  'en-UG': /^(\\+?256|0)?[7]\\d{8}$/,\n  'en-US':\n    /^((\\+1|1)?( |-)?)?(\\([2-9][0-9]{2}\\)|[2-9][0-9]{2})( |-)?([2-9][0-9]{2}( |-)?[0-9]{4})$/,\n  'en-ZA': /^(\\+?27|0)\\d{9}$/,\n  'en-ZM': /^(\\+?26)?09[567]\\d{7}$/,\n  'en-ZW': /^(\\+263)[0-9]{9}$/,\n  'en-BW': /^(\\+?267)?(7[1-8]{1})\\d{6}$/,\n  'es-AR': /^\\+?549(11|[2368]\\d)\\d{8}$/,\n  'es-BO': /^(\\+?591)?(6|7)\\d{7}$/,\n  'es-CO': /^(\\+?57)?3(0(0|1|2|4|5)|1\\d|2[0-4]|5(0|1))\\d{7}$/,\n  'es-CL': /^(\\+?56|0)[2-9]\\d{1}\\d{7}$/,\n  'es-CR': /^(\\+506)?[2-8]\\d{7}$/,\n  'es-CU': /^(\\+53|0053)?5\\d{7}$/,\n  'es-DO': /^(\\+?1)?8[024]9\\d{7}$/,\n  'es-HN': /^(\\+?504)?[9|8|3|2]\\d{7}$/,\n  'es-EC': /^(\\+?593|0)([2-7]|9[2-9])\\d{7}$/,\n  'es-ES': /^(\\+?34)?[6|7]\\d{8}$/,\n  'es-GT': /^(\\+?502)?[2|6|7]\\d{7}$/,\n  'es-PE': /^(\\+?51)?9\\d{8}$/,\n  'es-MX': /^(\\+?52)?(1|01)?\\d{10,11}$/,\n  'es-NI': /^(\\+?505)\\d{7,8}$/,\n  'es-PA': /^(\\+?507)\\d{7,8}$/,\n  'es-PY': /^(\\+?595|0)9[9876]\\d{7}$/,\n  'es-SV': /^(\\+?503)?[67]\\d{7}$/,\n  'es-UY': /^(\\+598|0)9[1-9][\\d]{6}$/,\n  'es-VE': /^(\\+?58)?(2|4)\\d{9}$/,\n  'et-EE': /^(\\+?372)?\\s?(5|8[1-4])\\s?([0-9]\\s?){6,7}$/,\n  'fa-IR': /^(\\+?98[\\-\\s]?|0)9[0-39]\\d[\\-\\s]?\\d{3}[\\-\\s]?\\d{4}$/,\n  'fi-FI': /^(\\+?358|0)\\s?(4[0-6]|50)\\s?(\\d\\s?){4,8}$/,\n  'fj-FJ': /^(\\+?679)?\\s?\\d{3}\\s?\\d{4}$/,\n  'fo-FO': /^(\\+?298)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'fr-BF': /^(\\+226|0)[67]\\d{7}$/,\n  'fr-BJ': /^(\\+229)\\d{8}$/,\n  'fr-CD': /^(\\+?243|0)?(8|9)\\d{8}$/,\n  'fr-CM': /^(\\+?237)6[0-9]{8}$/,\n  'fr-FR': /^(\\+?33|0)[67]\\d{8}$/,\n  'fr-GF': /^(\\+?594|0|00594)[67]\\d{8}$/,\n  'fr-GP': /^(\\+?590|0|00590)[67]\\d{8}$/,\n  'fr-MQ': /^(\\+?596|0|00596)[67]\\d{8}$/,\n  'fr-PF': /^(\\+?689)?8[789]\\d{6}$/,\n  'fr-RE': /^(\\+?262|0|00262)[67]\\d{8}$/,\n  'fr-WF': /^(\\+681)?\\d{6}$/,\n  'he-IL': /^(\\+972|0)([23489]|5[012345689]|77)[1-9]\\d{6}$/,\n  'hu-HU': /^(\\+?36|06)(20|30|31|50|70)\\d{7}$/,\n  'id-ID':\n    /^(\\+?62|0)8(1[123456789]|2[1238]|3[1238]|5[12356789]|7[78]|9[56789]|8[123456789])([\\s?|\\d]{5,11})$/,\n  'ir-IR': /^(\\+98|0)?9\\d{9}$/,\n  'it-IT': /^(\\+?39)?\\s?3\\d{2} ?\\d{6,7}$/,\n  'it-SM': /^((\\+378)|(0549)|(\\+390549)|(\\+3780549))?6\\d{5,9}$/,\n  'ja-JP': /^(\\+81[ \\-]?(\\(0\\))?|0)[6789]0[ \\-]?\\d{4}[ \\-]?\\d{4}$/,\n  'ka-GE': /^(\\+?995)?(79\\d{7}|5\\d{8})$/,\n  'kk-KZ': /^(\\+?7|8)?7\\d{9}$/,\n  'kl-GL': /^(\\+?299)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'ko-KR': /^((\\+?82)[ \\-]?)?0?1([0|1|6|7|8|9]{1})[ \\-]?\\d{3,4}[ \\-]?\\d{4}$/,\n  'ky-KG': /^(\\+?7\\s?\\+?7|0)\\s?\\d{2}\\s?\\d{3}\\s?\\d{4}$/,\n  'lt-LT': /^(\\+370|8)\\d{8}$/,\n  'lv-LV': /^(\\+?371)2\\d{7}$/,\n  'mg-MG': /^((\\+?261|0)(2|3)\\d)?\\d{7}$/,\n  'mn-MN': /^(\\+|00|011)?976(77|81|88|91|94|95|96|99)\\d{6}$/,\n  'my-MM': /^(\\+?959|09|9)(2[5-7]|3[1-2]|4[0-5]|6[6-9]|7[5-9]|9[6-9])[0-9]{7}$/,\n  'ms-MY': /^(\\+?60|0)1(([0145](-|\\s)?\\d{7,8})|([236-9](-|\\s)?\\d{7}))$/,\n  'mz-MZ': /^(\\+?258)?8[234567]\\d{7}$/,\n  'nb-NO': /^(\\+?47)?[49]\\d{7}$/,\n  'ne-NP': /^(\\+?977)?9[78]\\d{8}$/,\n  'nl-BE': /^(\\+?32|0)4\\d{8}$/,\n  'nl-NL': /^(((\\+|00)?31\\(0\\))|((\\+|00)?31)|0)6{1}\\d{8}$/,\n  'nl-AW': /^(\\+)?297(56|59|64|73|74|99)\\d{5}$/,\n  'nn-NO': /^(\\+?47)?[49]\\d{7}$/,\n  'pl-PL': /^(\\+?48)? ?([5-8]\\d|45) ?\\d{3} ?\\d{2} ?\\d{2}$/,\n  'pt-BR':\n    /^((\\+?55\\ ?[1-9]{2}\\ ?)|(\\+?55\\ ?\\([1-9]{2}\\)\\ ?)|(0[1-9]{2}\\ ?)|(\\([1-9]{2}\\)\\ ?)|([1-9]{2}\\ ?))((\\d{4}\\-?\\d{4})|(9[1-9]{1}\\d{3}\\-?\\d{4}))$/,\n  'pt-PT': /^(\\+?351)?9[1236]\\d{7}$/,\n  'pt-AO': /^(\\+244)\\d{9}$/,\n  'ro-MD': /^(\\+?373|0)((6(0|1|2|6|7|8|9))|(7(6|7|8|9)))\\d{6}$/,\n  'ro-RO': /^(\\+?40|0)\\s?7\\d{2}(\\/|\\s|\\.|-)?\\d{3}(\\s|\\.|-)?\\d{3}$/,\n  'ru-RU': /^(\\+?7|8)?9\\d{9}$/,\n  'si-LK': /^(?:0|94|\\+94)?(7(0|1|2|4|5|6|7|8)( |-)?)\\d{7}$/,\n  'sl-SI':\n    /^(\\+386\\s?|0)(\\d{1}\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}|\\d{2}\\s?\\d{3}\\s?\\d{3})$/,\n  'sk-SK': /^(\\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\n  'so-SO': /^(\\+?252|0)((6[0-9])\\d{7}|(7[1-9])\\d{7})$/,\n  'sq-AL': /^(\\+355|0)6[789]\\d{6}$/,\n  'sr-RS': /^(\\+3816|06)[- \\d]{5,9}$/,\n  'sv-SE': /^(\\+?46|0)[\\s\\-]?7[\\s\\-]?[02369]([\\s\\-]?\\d){7}$/,\n  'tg-TJ': /^(\\+?992)?[5][5]\\d{7}$/,\n  'th-TH': /^(\\+66|66|0)\\d{9}$/,\n  'tr-TR': /^(\\+?90|0)?5\\d{9}$/,\n  'tk-TM': /^(\\+993|993|8)\\d{8}$/,\n  'uk-UA': /^(\\+?38)?0(50|6[36-8]|7[357]|9[1-9])\\d{7}$/,\n  'uz-UZ': /^(\\+?998)?(6[125-79]|7[1-69]|88|9\\d)\\d{7}$/,\n  'vi-VN':\n    /^((\\+?84)|0)((3([2-9]))|(5([25689]))|(7([0|6-9]))|(8([1-9]))|(9([0-9])))([0-9]{7})$/,\n  'dz-BT': /^(\\+?975|0)?(17|16|77|02)\\d{6}$/,\n  'ar-YE': /^(((\\+|00)9677|0?7)[0137]\\d{7}|((\\+|00)967|0)[1-7]\\d{6})$/,\n  'ar-EH': /^(\\+?212|0)[\\s\\-]?(5288|5289)[\\s\\-]?\\d{5}$/,\n  'fa-AF': /^(\\+93|0)?(2{1}[0-8]{1}|[3-5]{1}[0-4]{1})(\\d{7})$/,\n  // aliases\n  get 'en-CA'() {\n    return phones['en-US'];\n  },\n  get 'fr-CA'() {\n    return phones['en-CA'];\n  },\n  get 'fr-BE'() {\n    return phones['nl-BE'];\n  },\n  get 'zh-HK'() {\n    return phones['en-HK'];\n  },\n  get 'zh-MO'() {\n    return phones['en-MO'];\n  },\n  get 'ga-IE'() {\n    return phones['en-IE'];\n  },\n  get 'fr-CH'() {\n    return phones['de-CH'];\n  },\n  get 'it-CH'() {\n    return phones['fr-CH'];\n  },\n};\n\nconst objectToString = Object.prototype.toString;\nconst supportWasm = typeof WebAssembly === 'object';\nconst toRawType = (v) => {\n  return objectToString.call(v).slice(8, -1).toLowerCase();\n};\nconst isArray = /*#__PURE__*/ (() => Array.isArray)();\nconst isBrowser = typeof window !== 'undefined';\nconst isNil = (v) => {\n  return v === undefined || v === null;\n};\nconst isObject = (v) => {\n  return v !== null && typeof v === 'object';\n};\nconst isNumber = (v) => {\n  return typeof v === 'number';\n};\nconst isString = (v) => {\n  return typeof v === 'string';\n};\nconst isPort = (n) => {\n  return Number.isInteger(n) && n >= 0 && n <= 65535;\n};\nconst isDate = (v) => {\n  return objectToString.call(v) === '[object Date]';\n};\nconst isRegExp = (v) => {\n  return objectToString.call(v) === '[object RegExp]';\n};\nconst isPromise = (v) => {\n  return v instanceof Promise;\n};\nconst isPromiseLike = (v) => {\n  return isObject(v) && typeof v.then === 'function';\n};\nconst isPlainObject = (v) => {\n  return objectToString.call(v) === '[object Object]';\n};\nconst isFunction = (v) => {\n  return typeof v === 'function';\n};\nconst unc = /^[a-zA-Z]:\\\\/;\nconst uri = /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/;\nconst isAbsolute = (p) => {\n  return !unc.test(p) && uri.test(p);\n};\nconst isWindow = (val) => {\n  return (\n    typeof window !== 'undefined' &&\n    objectToString.call(val) === '[object Window]'\n  );\n};\nconst typeArrTag =\n  /^\\[object (?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)Array\\]$/;\nconst isTypedArray = (val) => {\n  return typeArrTag.test(objectToString.call(val));\n};\nconst isSet =\n  typeof Set !== 'function' || !(/*#__PURE__*/ (() => Set.prototype.has)())\n    ? () => false\n    : (v) => isObject(v) && v instanceof Set;\nconst isWeakSet =\n  typeof WeakSet !== 'function' ||\n  !(/*#__PURE__*/ (() => WeakSet.prototype.has)())\n    ? () => false\n    : (v) => isObject(v) && v instanceof WeakSet;\nconst isMap =\n  typeof Map !== 'function' || !(/*#__PURE__*/ (() => Map.prototype.has)())\n    ? () => false\n    : (v) => isObject(v) && v instanceof Map;\nconst isWeakMap =\n  typeof WeakMap !== 'function' ||\n  !(/*#__PURE__*/ (() => WeakMap.prototype.has)())\n    ? () => false\n    : (v) => isObject(v) && v instanceof WeakMap;\nconst isBuffer = (v) => {\n  if (!isObject(v)) return false;\n  return Boolean(\n    v.constructor && v.constructor.isBuffer && v.constructor.isBuffer(v),\n  );\n};\nconst isInBounds = ([a, b], v) => {\n  if (v === a || v === b) return true;\n  const min = Math.min(a, b);\n  const max = min === a ? b : a;\n  return min < v && v < max;\n};\nconst isEmptyObject = (val) => {\n  for (const _ in val) return false;\n  return true;\n};\nconst isPrimitiveValue = (v) => {\n  return (\n    typeof v === 'number' ||\n    typeof v === 'bigint' ||\n    typeof v === 'string' ||\n    typeof v === 'symbol' ||\n    typeof v === 'boolean' ||\n    v === undefined ||\n    v === null\n  );\n};\nconst isWhitespace = (char) => {\n  return (\n    char === ' ' ||\n    char === '\\t' ||\n    char === '\\n' ||\n    char === '\\r' ||\n    char === '\\f' ||\n    char === '\\v'\n  );\n};\nconst isByteLength = (val, options = {}) => {\n  const min = options.min || 0;\n  const max = options.max;\n  const len = encodeURI(val).split(/%..|./).length - 1;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n};\nconst notBase64 = /[^A-Z0-9+\\/=]/i;\nconst urlSafeBase64 = /^[A-Z0-9_\\-]*$/i;\nconst isBase64 = (val, urlSafe = false) => {\n  const len = val.length;\n  if (urlSafe) return urlSafeBase64.test(val);\n  if (len % 4 !== 0 || notBase64.test(val)) return false;\n  const firstPaddingChar = val.indexOf('=');\n  return (\n    firstPaddingChar === -1 ||\n    firstPaddingChar === len - 1 ||\n    (firstPaddingChar === len - 2 && val[len - 1] === '=')\n  );\n};\nconst IPv4SegmentFormat =\n  '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nconst IPv4AddressFormat = /*#__PURE__*/ (() =>\n  `(${IPv4SegmentFormat}[.]){3}${IPv4SegmentFormat}`)();\nconst IPv4AddressRegExp = /*#__PURE__*/ (() =>\n  new RegExp(`^${IPv4AddressFormat}$`))();\nconst IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nconst IPv6AddressRegExp = /*#__PURE__*/ (() =>\n  new RegExp(\n    '^(' +\n      `(?:${IPv6SegmentFormat}:){7}(?:${IPv6SegmentFormat}|:)|` +\n      `(?:${IPv6SegmentFormat}:){6}(?:${IPv4AddressFormat}|:${IPv6SegmentFormat}|:)|` +\n      `(?:${IPv6SegmentFormat}:){5}(?::${IPv4AddressFormat}|(:${IPv6SegmentFormat}){1,2}|:)|` +\n      `(?:${IPv6SegmentFormat}:){4}(?:(:${IPv6SegmentFormat}){0,1}:${IPv4AddressFormat}|(:${IPv6SegmentFormat}){1,3}|:)|` +\n      `(?:${IPv6SegmentFormat}:){3}(?:(:${IPv6SegmentFormat}){0,2}:${IPv4AddressFormat}|(:${IPv6SegmentFormat}){1,4}|:)|` +\n      `(?:${IPv6SegmentFormat}:){2}(?:(:${IPv6SegmentFormat}){0,3}:${IPv4AddressFormat}|(:${IPv6SegmentFormat}){1,5}|:)|` +\n      `(?:${IPv6SegmentFormat}:){1}(?:(:${IPv6SegmentFormat}){0,4}:${IPv4AddressFormat}|(:${IPv6SegmentFormat}){1,6}|:)|` +\n      `(?::((?::${IPv6SegmentFormat}){0,5}:${IPv4AddressFormat}|(?::${IPv6SegmentFormat}){1,7}|:))` +\n      ')(%[0-9a-zA-Z-.:]{1,})?$',\n  ))();\n// https://github.com/validatorjs/validator.js/blob/master/src/lib/isIP.js\nconst isIP = (val, version) => {\n  if (!version) return isIP(val, '4') || isIP(val, '6');\n  if (version === '4') return IPv4AddressRegExp.test(val);\n  if (version === '6') return IPv6AddressRegExp.test(val);\n  return false;\n};\nconst isDomain = (val) => {\n  const parts = val.split('.');\n  if (parts.length < 2) return false;\n  const tld = parts[parts.length - 1];\n  const reg =\n    /^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i;\n  if (!reg.test(tld)) return false;\n  if (/\\s/.test(tld)) return false;\n  if (/^\\d+$/.test(tld)) return false;\n  return parts.every((part) => {\n    if (part.length > 63) return false;\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) return false;\n    if (/[\\uff01-\\uff5e]/.test(part)) return false;\n    if (/^-|-$/.test(part)) return false;\n    if (/_/.test(part)) return false;\n    return true;\n  });\n};\nconst isPhone = (val, locale, strictMode) => {\n  if (strictMode && !val.startsWith('+')) {\n    return false;\n  }\n  if (typeof locale === 'string' && locale in phones) {\n    return phones[locale].test(val);\n  }\n  if (isArray(locale)) {\n    return locale.some((key) => {\n      if (phones.hasOwnProperty(key)) {\n        if (phones[key].test(val)) return true;\n      }\n      return false;\n    });\n  }\n  if (!locale) {\n    for (const key in phones) {\n      if (phones.hasOwnProperty(key)) {\n        const phone = phones[key];\n        if (phone.test(val)) return true;\n      }\n    }\n    return false;\n  }\n  throw new Error(`Invalid locale '${locale}'`);\n};\nconst isCNPhone = (val, strictMode) => isPhone(val, 'zh-CN', strictMode);\nconst emailUserUtf8Part =\n  /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A1-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nconst quotedEmailUserUtf8 =\n  /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\n/**\n * Not verify `display_name`\n * */\nconst isEmail = (val, options) => {\n  // If greater than default max email length\n  if (val.length > 254) return false;\n  const parts = val.split('@');\n  const domain = parts.pop();\n  if (!domain) return false;\n  let user = parts.join('@');\n  if (!isByteLength(user, { max: 64 }) || !isByteLength(domain, { max: 254 })) {\n    return false;\n  }\n  if (!isDomain(domain)) {\n    if (options && options.disableIPDomain) {\n      return false;\n    }\n    // user@[192.168.1.1]\n    // user@[2001:0db8:85a3:0000:0000:8a2e:0370:7334]\n    if (!isIP(domain)) {\n      if (!domain.startsWith('[') || !domain.endsWith(']')) {\n        return false;\n      }\n      const noBracketdomain = domain.slice(1, -1);\n      if (noBracketdomain.length === 0 || !isIP(noBracketdomain)) {\n        return false;\n      }\n    }\n  }\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return quotedEmailUserUtf8.test(user);\n  }\n  const userParts = user.split('.');\n  for (let i = 0; i < userParts.length; i++) {\n    if (!emailUserUtf8Part.test(userParts[i])) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst freeSelf = /*#__PURE__*/ (() =>\n  typeof self === 'object' &&\n  self !== null &&\n  self.Object === Object &&\n  self)();\nconst freeGlobal = /*#__PURE__*/ (() =>\n  typeof global === 'object' &&\n  global !== null &&\n  global.Object === Object &&\n  global)();\nconst freeGlobalThis = /*#__PURE__*/ (() =>\n  typeof globalThis === 'object' &&\n  globalThis !== null &&\n  globalThis.Object === Object &&\n  globalThis)();\nconst root =\n  freeGlobalThis ||\n  freeGlobal ||\n  freeSelf ||\n  /*#__PURE__*/\n  (function () {\n    return this;\n  })();\n\nlet byteToHex;\nconst unsafeStringify = (arr) => {\n  if (!byteToHex) {\n    byteToHex = [];\n    for (let i = 0; i < 256; ++i) {\n      byteToHex.push((i + 0x100).toString(16).slice(1));\n    }\n  }\n  return (\n    byteToHex[arr[0]] +\n    byteToHex[arr[1]] +\n    byteToHex[arr[2]] +\n    byteToHex[arr[3]] +\n    '-' +\n    byteToHex[arr[4]] +\n    byteToHex[arr[5]] +\n    '-' +\n    byteToHex[arr[6]] +\n    byteToHex[arr[7]] +\n    '-' +\n    byteToHex[arr[8]] +\n    byteToHex[arr[9]] +\n    '-' +\n    byteToHex[arr[10]] +\n    byteToHex[arr[11]] +\n    byteToHex[arr[12]] +\n    byteToHex[arr[13]] +\n    byteToHex[arr[14]] +\n    byteToHex[arr[15]]\n  ).toLowerCase();\n};\nlet poolPtr;\nlet rnds8Pool;\nconst rng = () => {\n  if (!rnds8Pool) {\n    rnds8Pool = new Uint8Array(256);\n    poolPtr = rnds8Pool.length;\n  }\n  if (poolPtr > 256 - 16) {\n    for (let i = 0; i < 256; i++) {\n      rnds8Pool[i] = Math.floor(Math.random() * 256);\n    }\n    poolPtr = 0;\n  }\n  return rnds8Pool.slice(poolPtr, (poolPtr += 16));\n};\n// https://github.com/uuidjs/uuid/blob/main/src/v4.js\nconst uuid = () => {\n  const rnds = rng();\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n  return unsafeStringify(rnds);\n};\n\nconst _new = (val, ...args) => {\n  return new val.constructor(...args);\n};\nconst _isRes =\n  typeof Response === 'undefined' ? (v) => false : (v) => v instanceof Response;\nfunction clone$1(val, options) {\n  let exclude;\n  let ignoreError;\n  let includeNonEnum;\n  if (typeof options === 'boolean') {\n    includeNonEnum = options;\n  } else if (isSet(options) || isWeakSet(options)) {\n    exclude = options;\n  } else if (isObject(options)) {\n    ({ exclude, ignoreError, includeNonEnum } = options);\n  }\n  const allChildren = new WeakMap();\n  const _cv = (child, key, descriptor) => {\n    if (!descriptor) return;\n    if ('value' in descriptor) {\n      Object.defineProperty(child, key, {\n        ...descriptor,\n        value: _cl(descriptor.value),\n      });\n    } else if (descriptor.get || descriptor.set) {\n      try {\n        Object.defineProperty(child, key, descriptor);\n      } catch (e) {\n        // when in strict mode, TypeError will be thrown if parent[k] property only has a getter\n        if (!ignoreError) {\n          console.error(e);\n        }\n      }\n    }\n  };\n  const _cl = (parent) => {\n    if (parent === null || typeof parent !== 'object') {\n      return parent;\n    }\n    if (exclude && exclude.has(parent)) {\n      return parent;\n    }\n    if (allChildren.has(parent)) {\n      return allChildren.get(parent);\n    }\n    let child;\n    // Create a child\n    if (isMap(parent)) {\n      child = _new(parent);\n    } else if (isSet(parent)) {\n      child = _new(parent);\n    } else if (isArray(parent)) {\n      child = _new(parent);\n    } else if (isTypedArray(parent)) {\n      child = parent.slice();\n    } else if (isRegExp(parent)) {\n      child = _new(parent, parent.source, parent.flags);\n      if (parent.lastIndex) {\n        child.lastIndex = parent.lastIndex;\n      }\n    } else if (isDate(parent)) {\n      child = _new(parent, parent.getTime());\n    } else if (parent instanceof Error) {\n      child = Object.create(parent);\n    } else if (_isRes(parent)) {\n      child = parent.clone();\n    } else if (isBuffer(parent)) {\n      child = Buffer.from(parent);\n    } else if (parent instanceof Promise) {\n      child = _new(parent, (resolve, reject) => {\n        parent.then(\n          (v) => {\n            resolve(_cl(v));\n          },\n          (e) => {\n            reject(_cl(e));\n          },\n        );\n      });\n    } else {\n      const proto = Object.getPrototypeOf(parent);\n      child = Object.create(proto);\n    }\n    // Save the mapping relationship\n    allChildren.set(parent, child);\n    // Copy items\n    if (isMap(parent)) {\n      parent.forEach((val, key) => {\n        child.set(_cl(key), _cl(val));\n      });\n    } else if (isSet(parent)) {\n      parent.forEach((val) => {\n        child.add(_cl(val));\n      });\n    }\n    // Copy object\n    for (const key in parent) {\n      _cv(child, key, Object.getOwnPropertyDescriptor(parent, key));\n    }\n    // Copy symbol keys\n    if (Object.getOwnPropertySymbols) {\n      const symbols = Object.getOwnPropertySymbols(parent);\n      for (let i = 0; i < symbols.length; i++) {\n        const symbol = symbols[i];\n        const descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (!descriptor || (!descriptor.enumerable && !includeNonEnum)) {\n          continue;\n        }\n        _cv(child, symbol, descriptor);\n      }\n    }\n    // Copy non-enumerable properties\n    if (includeNonEnum) {\n      const ns = Object.getOwnPropertyNames(parent);\n      for (let i = 0; i < ns.length; i++) {\n        const n = ns[i];\n        const descriptor = Object.getOwnPropertyDescriptor(parent, n);\n        if (!descriptor || descriptor.enumerable) {\n          continue;\n        }\n        _cv(child, n, descriptor);\n      }\n    }\n    return child;\n  };\n  return _cl(val);\n}\n\nconst prevent = (val, { excludeSet }) => {\n  return isObject(val) && excludeSet && excludeSet.has(val);\n};\nconst isMergeableObject = (val) => {\n  return (\n    isObject(val) &&\n    !isDate(val) &&\n    !isRegExp(val) &&\n    val.$$typeof !== Symbol.for('react.element')\n  );\n};\nconst getEnumerableSymbols = (target) => {\n  return Object.getOwnPropertySymbols(target).filter((symbol) =>\n    Object.propertyIsEnumerable.call(target, symbol),\n  );\n};\nconst getKeys = (target) => {\n  return Object.keys(target).concat(getEnumerableSymbols(target));\n};\nconst propertyIsOnObject = (object, key) => {\n  try {\n    return key in object;\n  } catch (e) {\n    return false;\n  }\n};\nconst propertyIsUnsafe = (target, key) => {\n  return (\n    propertyIsOnObject(target, key) &&\n    !(\n      Object.hasOwnProperty.call(target, key) &&\n      Object.propertyIsEnumerable.call(target, key)\n    )\n  );\n};\nconst clone = (val, option) => {\n  if (!isMergeableObject(val)) return val;\n  return merge(Array.isArray(val) ? [] : {}, val, option);\n};\nconst mergeArray = (target, source, option) => {\n  let arr = option.arrayStrategy === 'replace' ? source : target.concat(source);\n  if (option.ignoreUndef) {\n    arr = arr.filter((val) => val !== undefined);\n  }\n  return arr.map((val) => clone(val, option));\n};\nconst mergeObject = (target, source, option) => {\n  const res = {};\n  const isUndef = (val) => option.ignoreUndef && val === undefined;\n  if (isMergeableObject(target)) {\n    const keys = getKeys(target);\n    for (const key of keys) {\n      const val = target[key];\n      if (isUndef(val)) continue;\n      res[key] = prevent(val, option) ? val : clone(val, option);\n    }\n  }\n  const keys = getKeys(source);\n  for (const key of keys) {\n    if (propertyIsUnsafe(target, key)) continue;\n    if (propertyIsOnObject(target, key) && isMergeableObject(source[key])) {\n      if (prevent(source[key], option)) {\n        res[key] = source[key];\n      } else if (prevent(target[key], option)) {\n        if (!isUndef(target[key])) {\n          res[key] = target[key];\n        }\n      } else {\n        res[key] = merge(target[key], source[key], option);\n      }\n    } else if (!isUndef(source[key])) {\n      res[key] = prevent(source[key], option)\n        ? source[key]\n        : clone(source[key], option);\n    }\n  }\n  return res;\n};\n// This should not be a structure with circular references\nconst merge = (target, source, option = {}) => {\n  const sourceIsArray = Array.isArray(source);\n  const targetIsArray = Array.isArray(target);\n  if (sourceIsArray !== targetIsArray) {\n    return clone(source, option);\n  } else if (sourceIsArray) {\n    return mergeArray(target, source, option);\n  } else {\n    return mergeObject(target, source, option);\n  }\n};\n\n/**\n * Give the current task one frame of time (default is 17ms).\n * If it exceeds one frame, the remaining tasks will be put into the next frame.\n */\nconst loopSlice = (l, fn, taskTime = 17) => {\n  return new Promise((resolve) => {\n    if (l === 0) {\n      resolve();\n      return;\n    }\n    let i = -1;\n    let start = Date.now();\n    const run = () => {\n      while (++i < l) {\n        if (fn(i) === false) {\n          resolve();\n          break;\n        }\n        if (i === l - 1) {\n          resolve();\n        } else {\n          const t = Date.now();\n          if (t - start > taskTime) {\n            start = t;\n            raf(run);\n            break;\n          }\n        }\n      }\n    };\n    run();\n  });\n};\n\n// The extends type includes `undefined` to match optional characters.\nconst throttle = (delay, fn, _isDebounce) => {\n  let lastExec = 0;\n  let cancelled = false;\n  let timer = null;\n  const clear = () => (timer = null);\n  function wrapper(...args) {\n    if (cancelled) return;\n    const cur = Date.now();\n    const elapsed = cur - lastExec;\n    const exec = (cur) => {\n      lastExec = cur || Date.now();\n      fn.apply(this, args);\n    };\n    // Default begin call\n    if (_isDebounce && !timer) {\n      exec(cur);\n    }\n    if (timer) {\n      clearTimeout(timer);\n    }\n    if (!_isDebounce && elapsed > delay) {\n      exec(cur);\n    } else {\n      timer = setTimeout(\n        _isDebounce ? clear : exec,\n        _isDebounce ? delay : delay - elapsed,\n      );\n    }\n  }\n  wrapper.cancel = () => {\n    if (timer) {\n      clearTimeout(timer);\n    }\n    clear();\n    cancelled = true;\n  };\n  return wrapper;\n};\nconst debounce = (delay, fn) => throttle(delay, fn, true);\n\nfunction createCacheObject(max, { onGet, onSet, onRemove, permanents } = {}) {\n  if (max < 0) max = 0;\n  let allSize = 0;\n  const data = Object.create(null);\n  const isPermanent = permanents ? makeMap(permanents) : () => false;\n  const has = (key) => !isNil(data[key]);\n  const remove = (key) => {\n    if (data[key]) {\n      const unit = data[key];\n      allSize -= unit.size;\n      if (allSize < 0) {\n        allSize = 0;\n      }\n      delete data[key];\n      if (typeof onRemove === 'function') {\n        onRemove(key, { ...unit });\n      }\n    }\n  };\n  const removeAll = () => {\n    for (const key in data) {\n      remove(key);\n    }\n  };\n  // When getting a not exist key, an error will be reported.\n  // Should use `has` to check first.\n  const get = (key) => {\n    assert(data[key], `\"${key}\" does not exist`);\n    data[key].count++;\n    if (typeof onGet === 'function') {\n      const ref = { ...data[key] };\n      onGet(key, ref);\n      return ref.value;\n    } else {\n      return data[key].value;\n    }\n  };\n  const set = (key, value, size, force) => {\n    let isInit = false;\n    let unit = data[key];\n    if (!unit) {\n      isInit = true;\n      unit = data[key] = Object.create(null);\n      unit.size = 0;\n      unit.count = 0;\n    }\n    if (typeof onSet === 'function') {\n      const ref = { size, value, count: unit.count };\n      onSet(key, ref);\n      size = ref.size;\n      value = ref.value;\n    }\n    const diff = size - unit.size;\n    const canSet = (s) => s + diff <= max;\n    if (size <= max) {\n      if (!canSet(allSize)) {\n        let tempSize = allSize;\n        const keys = Object.keys(data);\n        const queue = [];\n        const tryRemove = once(() => {\n          let l = queue.length;\n          let extra = max - tempSize - diff;\n          while (~--l) {\n            if (extra > 0 && extra >= queue[l][1]) {\n              extra -= queue[l][1];\n            } else {\n              remove(queue[l][0]);\n            }\n          }\n        });\n        keys.sort((a, b) => {\n          const d = data[a].count - data[b].count;\n          return d === 0 ? data[a].size - data[b].size : d;\n        });\n        for (let i = 0; i < keys.length; i++) {\n          const u = data[keys[i]];\n          if (canSet(tempSize)) {\n            tryRemove();\n            break;\n          }\n          if (keys[i] !== key && !isPermanent(keys[i])) {\n            if (\n              force ||\n              u.count < unit.count ||\n              (u.count === unit.count && u.size < size)\n            ) {\n              tempSize -= u.size;\n              if (tempSize < 0) tempSize = 0;\n              queue.push([keys[i], u.size]);\n            }\n          }\n        }\n        if (canSet(tempSize)) {\n          tryRemove();\n        }\n      }\n      if (canSet(allSize)) {\n        allSize += size - unit.size;\n        unit.size = size;\n        unit.value = value;\n        return true;\n      }\n    }\n    if (isInit) {\n      delete data[key];\n    }\n    return false;\n  };\n  return {\n    has,\n    get,\n    set,\n    max,\n    remove,\n    removeAll,\n    get size() {\n      return allSize;\n    },\n    get keys() {\n      return Object.keys(data);\n    },\n    get bucket() {\n      return data;\n    },\n  };\n}\n\nconst inlineString = (code) => {\n  const obj = {};\n  obj[code] = true;\n  return Object.keys(obj)[0];\n};\nconst esmEnvCode = (env, bridge) => {\n  if (env) {\n    let str = 'var ';\n    for (const key in env) {\n      str += `${key}=globalThis.${bridge}.${key},`;\n    }\n    return str.slice(0, -1) + ';';\n  }\n  return '';\n};\nfunction exec(code, type, options) {\n  const { env, sourceUrl, useStrict } = options || {};\n  const sourceCode = sourceUrl ? `\\n//# sourceURL=${sourceUrl}\\n` : '\\n';\n  if (type && type.startsWith('esm')) {\n    const bridge = `__aidlyExec${random(10000)}__`;\n    const esmCode = `${esmEnvCode(env, bridge)}${code}${sourceCode}`;\n    const id =\n      type === 'esm:data'\n        ? `data:text/javascript;charset=utf-8,${encodeURIComponent(esmCode)}`\n        : URL.createObjectURL(new Blob([esmCode], { type: 'text/javascript' }));\n    try {\n      if (env) globalThis[bridge] = env;\n      return (0, eval)(inlineString(`import(\"${id}\")`)).finally(() => {\n        delete globalThis[bridge];\n      });\n    } catch (e) {\n      delete globalThis[bridge];\n      throw e;\n    }\n  } else {\n    const keys = Object.keys(env || {});\n    const values = keys.map((key) => env[key]);\n    const paramsCode = keys.join(',');\n    const strictCode = useStrict ? '\"use strict\";' : '';\n    const cjsCode = type === 'cjs' ? 'module,exports,' : '';\n    const fn = (0, eval)(\n      inlineString(\n        `(()=>function _$c_(${cjsCode}${paramsCode}){${strictCode}${code}${sourceCode}})();`,\n      ),\n    );\n    if (type === 'cjs') {\n      const ms = { exports: Object.create(null) };\n      fn(ms, ms.exports, ...values);\n      return ms.exports;\n    }\n    return fn(...values);\n  }\n}\n\nclass Calculator {\n  expr;\n  i = 0;\n  priority = {\n    '+': 1,\n    '-': 1,\n    '*': 2,\n    '/': 2,\n    '%': 2,\n  };\n  constructor(expr) {\n    this.expr = expr;\n  }\n  calculateOperation(numbers, operator) {\n    const b = numbers.pop();\n    const a = numbers.pop();\n    if (a !== undefined && b !== undefined) {\n      switch (operator) {\n        case '+':\n          numbers.push(a + b);\n          break;\n        case '-':\n          numbers.push(a - b);\n          break;\n        case '*':\n          numbers.push(a * b);\n          break;\n        case '/':\n          numbers.push(a / b);\n          break;\n        case '%':\n          numbers.push(a % b);\n          break;\n        default:\n          throw new Error(`Invalid operator: \"${operator}\"`);\n      }\n    }\n  }\n  evaluate(tokens) {\n    if (tokens.length === 0) return NaN;\n    const numbers = [];\n    const operators = [];\n    for (const token of tokens) {\n      if (typeof token === 'string') {\n        const cur = this.priority[token];\n        while (operators.length > 0 && this.priority[last(operators)] >= cur) {\n          this.calculateOperation(numbers, operators.pop());\n        }\n        operators.push(token);\n      } else {\n        numbers.push(token);\n      }\n    }\n    while (operators.length > 0) {\n      this.calculateOperation(numbers, operators.pop());\n    }\n    const n = numbers.pop();\n    return typeof n === 'number' ? n : NaN;\n  }\n  tokenizer() {\n    const tokens = [];\n    if (!this.expr) return tokens;\n    let buf = '';\n    const add = () => {\n      if (buf) {\n        tokens.push(Number(buf));\n        buf = '';\n      }\n    };\n    for (; this.i < this.expr.length; this.i++) {\n      const char = this.expr[this.i];\n      if (isWhitespace(char));\n      else if (char === '+' || char === '-') {\n        const prevToken = last(tokens);\n        if (!buf && (!prevToken || prevToken in this.priority)) {\n          buf += char;\n        } else {\n          add();\n          tokens.push(char);\n        }\n      } else if (char === '*' || char === '/' || char === '%') {\n        add();\n        tokens.push(char);\n      } else if (char === '(') {\n        this.i++;\n        tokens.push(this.evaluate(this.tokenizer()));\n      } else if (char === ')') {\n        this.i++;\n        add();\n        return tokens;\n      } else {\n        buf += char;\n      }\n    }\n    add();\n    return tokens;\n  }\n}\nconst isLegalExpression = (expr) => {\n  const keywords = '\\',\",`,:,;,[,{,=,var,let,const,return'.split(',');\n  for (const word of keywords) {\n    if (expr.includes(word)) {\n      return false;\n    }\n  }\n  return !/[^\\+\\-\\*\\/\\%\\s]+\\(/.test(expr);\n};\nconst mathExprEvaluate = (expr, options) => {\n  const { units, verify, actuator, exec = true } = options || {};\n  if (verify && !isLegalExpression(expr)) {\n    throw new Error(`Invalid expression: \"${expr}\"`);\n  }\n  expr = expr.replace(\n    /(-?\\d+(\\.\\d+)?|NaN|Infinity)([^\\d\\s\\+\\-\\*\\/\\.\\(\\)]+)?/g,\n    ($1, n, $3, u, $4) => {\n      if (!u) return n;\n      const parser = units && (units[u] || units['default']);\n      if (!parser) throw new Error(`Invalid unit: \"${u}\"`);\n      return String(parser(n, u, expr));\n    },\n  );\n  try {\n    if (actuator) {\n      return actuator(expr, Boolean(exec));\n    } else {\n      if (!exec) return expr;\n      const calculator = new Calculator(expr);\n      return calculator.evaluate(calculator.tokenizer());\n    }\n  } catch (e) {\n    throw new Error(`Invalid expression: \"${expr}\", error: \"${e}\"`);\n  }\n};\n\n// Object references are a built-in behavior of es, so `@@` is used here.\nconst defaultFlag = '@@ref*';\nconst createJSONParse = ({ flag, parse } = {}) => {\n  if (typeof flag !== 'string') flag = defaultFlag;\n  if (typeof parse !== 'function') parse = JSON.parse;\n  return (text, reviver) => {\n    const map = new Map();\n    const refs = Object.create(null);\n    const replace = [];\n    const refKey = (v) => v.slice(flag.length);\n    const isRefStr = (v) => {\n      return typeof v === 'string' && v.startsWith(flag);\n    };\n    function _reviver(key, value) {\n      let isRef = false;\n      if (flag) {\n        if (!map.has(this)) {\n          map.set(this, {});\n        }\n        const parent = map.get(this);\n        parent[key] = {\n          set: [],\n          add(p) {\n            if (!p) return;\n            this.set.unshift(p);\n            const children = map.get(value);\n            for (const prop in children) {\n              children[prop].add(p);\n            }\n          },\n        };\n        parent[key].add(key);\n        if (isRefStr(value)) {\n          isRef = true;\n          let ref = refKey(value);\n          replace.unshift(() => {\n            let refValue = refs[ref];\n            while (isRefStr(refValue)) {\n              refValue = refs[refKey(refValue)];\n            }\n            this[key] = refValue;\n          });\n        }\n      }\n      return !isRef && typeof reviver === 'function'\n        ? reviver.call(this, key, value)\n        : value;\n    }\n    const res = parse(text, _reviver);\n    map.forEach((value, key) => {\n      for (const prop in value) {\n        refs[value[prop].set.join('.')] = key[prop];\n      }\n    });\n    for (const fn of replace) {\n      fn();\n    }\n    return res;\n  };\n};\nconst createJSONStringify = ({ flag, stringify } = {}) => {\n  if (typeof flag !== 'string') flag = defaultFlag;\n  if (typeof stringify !== 'function') stringify = JSON.stringify;\n  return (value, replacer, space) => {\n    const map = new WeakMap();\n    function _replacer(key, value) {\n      if (typeof replacer === 'function') {\n        value = replacer.call(this, key, value);\n      }\n      if (flag) {\n        if (isObject(value)) {\n          let path = key;\n          if (map.has(this)) {\n            const parent = map.get(this);\n            path = parent ? `${parent}.${key}` : key;\n          }\n          if (map.has(value)) {\n            value = `${flag}${map.get(value)}`;\n          } else {\n            map.set(value, path);\n          }\n        }\n      }\n      return value;\n    }\n    return stringify(value, _replacer, space);\n  };\n};\nconst jsonParse = /*#__PURE__*/ createJSONParse();\nconst jsonStringify = /*#__PURE__*/ createJSONStringify();\n\nconst defaultStringifyOptions = {\n  encode: true,\n  commaRoundTrip: true,\n  addQueryPrefix: false,\n  arrayFormat: 'indices',\n};\nconst defaultParseOptions = {\n  depth: 5,\n  arrayLimit: 20,\n  comma: true,\n  allowSparse: true,\n};\nconst decode = (s) => {\n  s = s.replace(/\\+/g, ' ');\n  try {\n    return decodeURIComponent(s);\n  } catch (e) {\n    return s; // Error case {%:%}\n  }\n};\nlet hexTable;\nconst encode = (str) => {\n  // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n  // It has been adapted here for stricter adherence to RFC 3986\n  if (str.length === 0) return str;\n  let s = str;\n  const limit = 1024;\n  if (typeof str === 'symbol') {\n    s = Symbol.prototype.toString.call(str);\n  } else if (typeof str !== 'string') {\n    s = String(str);\n  }\n  if (!hexTable) {\n    hexTable = [];\n    for (let i = 0; i < 256; i++) {\n      hexTable.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n  }\n  let out = '';\n  for (let j = 0; j < s.length; j += limit) {\n    const arr = [];\n    const segment = s.length >= limit ? s.slice(j, j + limit) : s;\n    for (let i = 0; i < segment.length; i++) {\n      let c = segment.charCodeAt(i);\n      if (\n        c === 0x2d || // -\n        c === 0x2e || // .\n        c === 0x5f || // _\n        c === 0x7e || // ~\n        (c >= 0x30 && c <= 0x39) || // 0-9\n        (c >= 0x41 && c <= 0x5a) || // a-z\n        (c >= 0x61 && c <= 0x7a) // A-Z\n      ) {\n        arr[arr.length] = segment.charAt(i);\n        continue;\n      }\n      if (c < 0x80) {\n        arr[arr.length] = hexTable[c];\n        continue;\n      }\n      if (c < 0x800) {\n        arr[arr.length] =\n          hexTable[0xc0 | (c >> 6)] + hexTable[0x80 | (c & 0x3f)];\n        continue;\n      }\n      if (c < 0xd800 || c >= 0xe000) {\n        arr[arr.length] =\n          hexTable[0xe0 | (c >> 12)] +\n          hexTable[0x80 | ((c >> 6) & 0x3f)] +\n          hexTable[0x80 | (c & 0x3f)];\n        continue;\n      }\n      i += 1;\n      c = 0x10000 + (((c & 0x3ff) << 10) | (segment.charCodeAt(i) & 0x3ff));\n      arr[arr.length] =\n        hexTable[0xf0 | (c >> 18)] +\n        hexTable[0x80 | ((c >> 12) & 0x3f)] +\n        hexTable[0x80 | ((c >> 6) & 0x3f)] +\n        hexTable[0x80 | (c & 0x3f)];\n    }\n    out += arr.join('');\n  }\n  return out;\n};\nconst pushToArray = (arr, valueOrArray) => {\n  arr.push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\nconst arrayPrefixFns = {\n  comma: (p) => p,\n  repeat: (p) => p,\n  brackets: (p) => `${p}[]`,\n  indices: (p, k) => `${p}[${k}]`,\n};\nconst sentinel = {};\nconst stringify = (object, prefix, commaRoundTrip, sideChannel, options) => {\n  let step = 0;\n  let obj = object;\n  let tmpSc = sideChannel;\n  let findFlag = false;\n  while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n    const pos = tmpSc.get(object);\n    step += 1;\n    if (typeof pos !== 'undefined') {\n      if (pos === step) {\n        throw new RangeError('Cyclic object value');\n      }\n      findFlag = true; // Break while\n    }\n    if (typeof tmpSc.get(sentinel) === 'undefined') {\n      step = 0;\n    }\n  }\n  if (isDate(obj)) {\n    obj = obj.toISOString();\n  } else if (options.arrayFormat === 'comma' && isArray(obj)) {\n    obj = obj.map((val) => (isDate(val) ? val.toISOString() : val));\n  }\n  if (obj === null) {\n    obj = '';\n  }\n  if ((!isNil(obj) && isPrimitiveValue(obj)) || isBuffer(obj)) {\n    return !options.encode\n      ? [`${prefix}=${obj}`]\n      : [`${encode(prefix)}=${encode(obj)}`];\n  }\n  const values = [];\n  if (typeof obj === 'undefined') return values;\n  let objKeys;\n  if (options.arrayFormat === 'comma' && isArray(obj)) {\n    objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : undefined }];\n  } else {\n    objKeys = Object.keys(obj);\n  }\n  const adjustedPrefix =\n    commaRoundTrip && isArray(obj) && obj.length === 1 ? `${prefix}[]` : prefix;\n  for (let j = 0; j < objKeys.length; j++) {\n    const key = objKeys[j];\n    const value =\n      typeof key === 'object' && typeof key.value !== 'undefined'\n        ? key.value\n        : obj[key];\n    let keyPrefix;\n    if (isArray(obj)) {\n      keyPrefix = arrayPrefixFns[options.arrayFormat](adjustedPrefix, key);\n    } else {\n      keyPrefix = `${adjustedPrefix}[${key}]`;\n    }\n    sideChannel.set(object, step);\n    const valueSideChannel = new Map();\n    valueSideChannel.set(sentinel, sideChannel);\n    pushToArray(\n      values,\n      stringify(value, keyPrefix, commaRoundTrip, valueSideChannel, options),\n    );\n  }\n  return values;\n};\nconst compact = (value) => {\n  const refs = [];\n  const queue = [{ obj: { o: value }, prop: 'o' }];\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const obj = item.obj[item.prop];\n    const keys = Object.keys(obj);\n    for (let j = 0; j < keys.length; j++) {\n      const key = keys[j];\n      const val = obj[key];\n      if (isObject(val) && refs.indexOf(val) === -1) {\n        queue.push({ obj: obj, prop: key });\n        refs.push(val);\n      }\n    }\n  }\n  while (queue.length > 1) {\n    const item = queue.pop();\n    const obj = item.obj[item.prop];\n    if (isArray(obj)) {\n      const compacted = [];\n      for (let j = 0; j < obj.length; j++) {\n        if (typeof obj[j] !== 'undefined') {\n          compacted.push(obj[j]);\n        }\n      }\n      item.obj[item.prop] = compacted;\n    }\n  }\n  return value;\n};\nconst mg = (target, source) => {\n  if (!source) return target;\n  if (typeof source !== 'object') {\n    if (isArray(target)) {\n      target.push(source);\n    } else if (target && typeof target === 'object') {\n      if (!hasOwn(Object.prototype, source)) {\n        target[source] = true;\n      }\n    } else {\n      return [target, source];\n    }\n    return target;\n  }\n  if (!target || typeof target !== 'object') {\n    return [target].concat(source);\n  }\n  let mergeTarget = target;\n  if (isArray(target) && !isArray(source)) {\n    const obj = {};\n    for (let i = 0; i < target.length; i++) {\n      if (typeof target[i] !== 'undefined') {\n        obj[i] = target[i];\n      }\n    }\n    mergeTarget = obj;\n  }\n  if (isArray(target) && isArray(source)) {\n    source.forEach((item, i) => {\n      if (hasOwn(target, i)) {\n        const targetItem = target[i];\n        if (isObject(targetItem) && isObject(item)) {\n          target[i] = mg(targetItem, item);\n        } else {\n          target.push(item);\n        }\n      } else {\n        target[i] = item;\n      }\n    });\n    return target;\n  }\n  return Object.keys(source).reduce((acc, key) => {\n    const value = source[key];\n    acc[key] = hasOwn(acc, key) ? mg(acc[key], value) : value;\n    return acc;\n  }, mergeTarget);\n};\nconst parseArray = (s, options) =>\n  s && typeof s === 'string' && options.comma && s.indexOf(',') > -1\n    ? s.split(',')\n    : s;\nconst parseObject = (chain, leaf, options) => {\n  for (let i = chain.length - 1; i >= 0; i--) {\n    let obj;\n    const root = chain[i];\n    if (root === '[]') {\n      obj = leaf === '' ? [] : [].concat(leaf);\n    } else {\n      obj = {};\n      const cleanRoot =\n        root.charAt(0) === '[' && root.charAt(root.length - 1) === ']'\n          ? root.slice(1, -1)\n          : root;\n      const index = parseInt(cleanRoot, 10);\n      if (\n        !Number.isNaN(index) &&\n        root !== cleanRoot &&\n        String(index) === cleanRoot &&\n        index >= 0 &&\n        index <= options.arrayLimit\n      ) {\n        obj = [];\n        obj[index] = leaf;\n      } else if (cleanRoot !== '__proto__') {\n        obj[cleanRoot] = leaf;\n      }\n    }\n    leaf = obj;\n  }\n  return leaf;\n};\nconst parseKeys = (key, val, options) => {\n  if (!key) return;\n  const keys = [];\n  const brackets = /(\\[[^[\\]]*])/;\n  const child = /(\\[[^[\\]]*])/g;\n  let segment = brackets.exec(key);\n  const parent = segment ? key.slice(0, segment.index) : key;\n  if (parent) {\n    if (hasOwn(Object.prototype, parent)) return;\n    keys.push(parent);\n  }\n  let i = 0;\n  while ((segment = child.exec(key)) !== null && i < options.depth) {\n    i += 1;\n    if (hasOwn(Object.prototype, segment[1].slice(1, -1))) {\n      return;\n    }\n    keys.push(segment[1]);\n  }\n  if (segment) {\n    keys.push('[' + key.slice(segment.index) + ']');\n  }\n  return parseObject(keys, val, options);\n};\nconst parse = (s, options) => {\n  s = s.replace(/^\\?/, '');\n  const parts = s.split('&');\n  const res = Object.create(null);\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n    let key;\n    let val;\n    let pos = part.indexOf(']=');\n    pos = pos === -1 ? part.indexOf('=') : pos + 1;\n    if (pos === -1) {\n      key = decode(part);\n      val = '';\n    } else {\n      key = decode(part.slice(0, pos));\n      const arr = parseArray(part.slice(pos + 1), options);\n      val = isArray(arr) ? arr.map(decode) : decode(arr);\n    }\n    if (part.indexOf('[]=') > -1) val = isArray(val) ? [val] : val;\n    res[key] = hasOwn(res, key) ? [].concat(res[key], val) : val;\n  }\n  return res;\n};\n// https://github.com/ljharb/qs/blob/main/lib/parse.js\nconst qsParse = (s, options) => {\n  if (!s || typeof s !== 'string') return {};\n  options = Object.assign({}, defaultParseOptions, options);\n  let obj = {};\n  const tempObj = parse(s, options);\n  const keys = Object.keys(tempObj);\n  for (let i = 0; i < keys.length; i++) {\n    const newObj = parseKeys(keys[i], tempObj[keys[i]], options);\n    obj = mg(obj, newObj);\n  }\n  return options.allowSparse ? obj : compact(obj);\n};\n// https://github.com/ljharb/qs/blob/main/lib/stringify.js\nconst qsStringify = (obj, options) => {\n  if (!isObject(obj)) return '';\n  options = Object.assign({}, defaultStringifyOptions, options);\n  const keys = [];\n  const objKeys = Object.keys(obj);\n  const sideChannel = new WeakMap();\n  const commaRoundTrip = Boolean(\n    options.arrayFormat === 'comma' && options.commaRoundTrip,\n  );\n  for (let i = 0; i < objKeys.length; ++i) {\n    const key = objKeys[i];\n    pushToArray(\n      keys,\n      stringify(obj[key], key, commaRoundTrip, sideChannel, options),\n    );\n  }\n  const res = keys.join('&');\n  if (res.length === 0) return '';\n  return options.addQueryPrefix ? `?${res}` : res;\n};\n\nconst colors = {\n  red: '#FF4136',\n  navy: '#001F3F',\n  blue: '#0074D9',\n  aqua: '#7FDBFF',\n  teal: '#39CCCC',\n  lime: '#01FF70',\n  gray: '#AAAAAA',\n  black: '#111111',\n  olive: '#3D9970',\n  white: '#FFFFFF',\n  green: '#2ECC40',\n  yellow: '#FFDC00',\n  orange: '#FF851B',\n  purple: '#B10DC9',\n  maroon: '#85144B',\n  silver: '#DDDDDD',\n  fuchsia: '#F012BE',\n};\n// https://github.com/Qix-/color-convert/blob/master/conversions.js\nconst rgbToHsl = (rgb) => {\n  let h;\n  let s;\n  const r = rgb[0] / 255;\n  const g = rgb[1] / 255;\n  const b = rgb[2] / 255;\n  const a = rgb[3];\n  const min = Math.min(r, g, b);\n  const max = Math.max(r, g, b);\n  const delta = max - min;\n  if (max === min) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else if (b === max) {\n    h = 4 + (r - g) / delta;\n  }\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  const l = (min + max) / 2;\n  if (max === min) {\n    s = 0;\n  } else if (l <= 0.5) {\n    s = delta / (max + min);\n  } else {\n    s = delta / (2 - max - min);\n  }\n  const hsl = [h, s * 100, l * 100];\n  if (typeof a === 'number') hsl.push(a);\n  return hsl;\n};\nconst rgbToHex = (rgb) => {\n  const string = (\n    ((Math.round(rgb[0]) & 0xff) << 16) +\n    ((Math.round(rgb[1]) & 0xff) << 8) +\n    (Math.round(rgb[2]) & 0xff)\n  )\n    .toString(16)\n    .toUpperCase();\n  let hex = '000000'.substring(string.length) + string;\n  if (typeof rgb[3] === 'number') {\n    hex += Math.round(rgb[3] * 0xff).toString(16);\n  }\n  return hex;\n};\n/**\n * Not supported on `alpha`\n */\nconst rgbToAnsi256 = (rgb) => {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  // We use the extended greyscale palette here, with the exception of\n  // black and white. normal palette only has 4 greyscale shades.\n  if (r >> 4 === g >> 4 && g >> 4 === b >> 4) {\n    if (r < 8) return 16;\n    if (r > 248) return 231;\n    return Math.round(((r - 8) / 247) * 24) + 232;\n  }\n  return (\n    16 +\n    36 * Math.round((r / 255) * 5) +\n    6 * Math.round((g / 255) * 5) +\n    Math.round((b / 255) * 5)\n  );\n};\nconst hslToRgb = (hsl) => {\n  const h = hsl[0] / 360;\n  const s = hsl[1] / 100;\n  const l = hsl[2] / 100;\n  const a = hsl[3];\n  let t2;\n  let t3;\n  let val;\n  if (s === 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n  if (l < 0.5) {\n    t2 = l * (1 + s);\n  } else {\n    t2 = l + s - l * s;\n  }\n  const t1 = 2 * l - t2;\n  const rgb = [0, 0, 0];\n  for (let i = 0; i < 3; i++) {\n    t3 = h + (1 / 3) * -(i - 1);\n    if (t3 < 0) t3++;\n    if (t3 > 1) t3--;\n    if (6 * t3 < 1) {\n      val = t1 + (t2 - t1) * 6 * t3;\n    } else if (2 * t3 < 1) {\n      val = t2;\n    } else if (3 * t3 < 2) {\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    } else {\n      val = t1;\n    }\n    rgb[i] = val * 255;\n  }\n  if (typeof a === 'number') rgb.push(a);\n  return rgb;\n};\nconst hexToRgb = (hex) => {\n  const match = hex.match(/[a-f0-9]{8}|[a-f0-9]{6}|[a-f0-9]{3}/i);\n  if (!match) return [0, 0, 0];\n  let colorString = match[0];\n  if (match[0].length === 3) {\n    colorString = colorString\n      .split('')\n      .map((char) => char + char)\n      .join('');\n  }\n  let a;\n  if (colorString.length === 8) {\n    a = Number(BigInt('0x' + colorString[6] + colorString[7])) / 0xff;\n    colorString = colorString.slice(0, 6);\n  }\n  const integer = Number(BigInt('0x' + colorString));\n  const rgb = [(integer >> 16) & 0xff, (integer >> 8) & 0xff, integer & 0xff];\n  if (a) rgb.push(a);\n  return rgb;\n};\nconst ansi256ToRgb = (val) => {\n  if (val >= 232) {\n    const c = (val - 232) * 10 + 8;\n    return [c, c, c];\n  }\n  val -= 16;\n  let rem;\n  const r = (Math.floor(val / 36) / 5) * 255;\n  const g = (Math.floor((rem = val % 36) / 6) / 5) * 255;\n  const b = ((rem % 6) / 5) * 255;\n  return [r, g, b];\n};\nfunction randomColor(type) {\n  const r = random(255);\n  const g = random(255);\n  const b = random(255);\n  const color = [r, g, b];\n  if (type === 'hex') return rgbToHex(color);\n  if (type === 'hsl') return rgbToHsl(color);\n  if (type === 'ansi256') return rgbToAnsi256(color);\n  return color;\n}\n\nconst noop = () => {};\n// TypeScript cannot use arrowFunctions for assertions.\nfunction assert(condition, error) {\n  if (!condition) throw new Error(error);\n}\n// Because there is access to the global object,\n// it is declared as a function here for better `tree-shaking`.\nconst raf = (fn) => {\n  typeof requestAnimationFrame === 'function'\n    ? requestAnimationFrame(fn)\n    : typeof process !== 'undefined' && typeof process.nextTick === 'function'\n    ? process.nextTick(fn)\n    : setTimeout(fn, 17);\n};\nconst now = () =>\n  typeof performance !== 'undefined' && typeof performance.now === 'function'\n    ? performance.now()\n    : Date.now();\nconst idleCallback =\n  typeof requestIdleCallback !== 'undefined' ? requestIdleCallback : raf;\nconst last = (arr, i = 0) => {\n  return arr[arr.length + i - 1];\n};\nconst uniq = (arr) => {\n  return Array.from(new Set(arr));\n};\nconst hasOwn = (obj, key) => {\n  return Object.hasOwnProperty.call(obj, key);\n};\nconst capitalize = ([v, ...args]) => {\n  return v.toUpperCase() + args.join('').toLowerCase();\n};\nconst slash = (val) => {\n  return val.replace(/\\\\/g, '/');\n};\nconst makeMap = (arr) => {\n  const map = Object.create(null);\n  for (let i = 0; i < arr.length; i++) {\n    map[arr[i]] = true;\n  }\n  return (v) => Boolean(map[v]);\n};\nconst decimalPlaces = (n) =>\n  !Number.isFinite(n) || Number.isInteger(n)\n    ? 0\n    : String(n).split('.')[1].length;\nconst random = (min = 0, max = 0) => {\n  if (max === min) return max;\n  if (max < min) min = [max, (max = min)][0];\n  const n = Number(\n    (Math.random() * (max - min) + min).toFixed(\n      Math.max(decimalPlaces(min), decimalPlaces(max)),\n    ),\n  );\n  if (n > max) return max;\n  if (n < min) return min;\n  return n;\n};\nconst once = (fn) => {\n  let result;\n  let called = false;\n  function wrap(...args) {\n    if (called) return result;\n    called = true;\n    result = fn.apply(this, args);\n    return result;\n  }\n  return wrap;\n};\nconst sleep = (t) => {\n  return new Promise((resolve) => {\n    if (!t) return resolve();\n    let timer;\n    timer = setTimeout(() => {\n      timer && clearTimeout(timer);\n      timer = null;\n      resolve();\n    }, t);\n  });\n};\nconst remove = (arr, el) => {\n  if (isArray(arr)) {\n    const i = arr.indexOf(el);\n    if (i > -1) {\n      arr.splice(i, 1);\n      return true;\n    }\n    return false;\n  } else {\n    if (arr.has(el)) {\n      arr.delete(el);\n      return true;\n    }\n    return false;\n  }\n};\n// prettier-ignore\nfunction map(data, fn) {\n    fn = fn || ((val) => val);\n    if (isArray(data)) {\n        return data.map((val, i) => fn(val, i));\n    }\n    if (isSet(data)) {\n        const cloned = new Set();\n        for (const val of data) {\n            cloned.add(fn(val));\n        }\n        return cloned;\n    }\n    if (isPlainObject(data)) {\n        const cloned = {};\n        for (const key in data) {\n            cloned[key] = fn(data[key], key);\n        }\n        return cloned;\n    }\n    throw new Error(`Invalid type \"${toRawType(data)}\"`);\n}\nconst toCamelCase = (val, upper = false, reg = /[_-]/g) => {\n  return val\n    .split(reg)\n    .map((k, i) => {\n      if (!k) return null;\n      return !upper && i === 0\n        ? k.toLowerCase()\n        : k.charAt(0).toUpperCase() + k.slice(1).toLowerCase();\n    })\n    .join('');\n};\nconst getExtname = (p) => {\n  let extra = '';\n  if (isAbsolute(p)) {\n    p = new URL(p).pathname;\n  }\n  let len = p.length;\n  while (~--len) {\n    const c = p[len];\n    if (c === '/') return '';\n    if (c === '.') return c + extra;\n    extra = c + extra;\n  }\n  return '';\n};\n// From `iterator interface` of simulate\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\nconst ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nconst getIteratorFn = (v) => {\n  let res;\n  if (v) {\n    res = (ITERATOR_SYMBOL && v[ITERATOR_SYMBOL]) || v[FAUX_ITERATOR_SYMBOL];\n  }\n  return res;\n};\nconst sortStrings = (arr, locales = 'en') => {\n  return [...arr].sort((a, b) => a.localeCompare(b, locales));\n};\n// If there is a deep sort, the user can handle it by themselves\nconst sortKeys = (val, locales) => {\n  const map = {};\n  const keys = sortStrings(Object.keys(val), locales);\n  for (const key of keys) {\n    map[key] = val[key];\n  }\n  return map;\n};\nconst clearUndef = (val) => {\n  Object.keys(val).forEach((key) => {\n    if (val[key] === undefined) {\n      delete val[key];\n    }\n  });\n  return val;\n};\nconst pick = (val, keys, omitUndefined = false) => {\n  return keys.reduce((n, k) => {\n    if (k in val) {\n      if (!omitUndefined || val[k] !== undefined) {\n        n[k] = val[k];\n      }\n    }\n    return n;\n  }, {});\n};\nconst omit = (val, keys) => {\n  return Object.keys(val).reduce((n, k) => {\n    if (!keys.includes(k)) {\n      n[k] = val[k];\n    }\n    return n;\n  }, {});\n};\nconst _reFullWs = /^\\s*$/;\nconst unindent = (str) => {\n  const lines = (typeof str === 'string' ? str : str[0]).split('\\n');\n  const whitespaceLines = lines.map((line) => _reFullWs.test(line));\n  const commonIndent = lines.reduce((min, line, idx) => {\n    if (whitespaceLines[idx]) return min;\n    const indent = line.match(/^\\s*/)?.[0].length;\n    return indent === undefined ? min : Math.min(min, indent);\n  }, Number.POSITIVE_INFINITY);\n  let emptyLinesHead = 0;\n  while (emptyLinesHead < lines.length && whitespaceLines[emptyLinesHead]) {\n    emptyLinesHead++;\n  }\n  let emptyLinesTail = 0;\n  while (\n    emptyLinesTail < lines.length &&\n    whitespaceLines[lines.length - emptyLinesTail - 1]\n  ) {\n    emptyLinesTail++;\n  }\n  return lines\n    .slice(emptyLinesHead, lines.length - emptyLinesTail)\n    .map((line) => line.slice(commonIndent))\n    .join('\\n');\n};\nconst deferred = () => {\n  let reject;\n  let resolve;\n  const promise = new Promise((rs, rj) => {\n    reject = rj;\n    resolve = rs;\n  });\n  return { promise, resolve, reject };\n};\nconst batchProcess = ({ ms, processor }) => {\n  const queue = [];\n  const flush = () => {\n    setTimeout(() => {\n      const ls = [];\n      const fns = [];\n      for (const { value, resolve } of queue) {\n        ls.push(value);\n        fns.push(resolve);\n      }\n      queue.length = 0;\n      processor(ls);\n      for (const fn of fns) {\n        fn();\n      }\n    }, ms || 0);\n  };\n  return (value) => {\n    const defer = deferred();\n    if (queue.length === 0) flush();\n    queue.push({ value, resolve: defer.resolve });\n    return defer.promise;\n  };\n};\nconst retry = (fn, callback) => {\n  let n = 0;\n  if (typeof callback === 'number') {\n    const max = callback;\n    callback = (e, n, next) => (n > max ? Promise.reject(e) : next());\n  }\n  const next = () => {\n    try {\n      n++;\n      const res = fn();\n      return Promise.resolve(res).catch((e) => callback(e, n, next));\n    } catch (e) {\n      return callback(e, n, next);\n    }\n  };\n  return next();\n};\n\nexport {\n  ansi256ToRgb,\n  assert,\n  batchProcess,\n  capitalize,\n  clearUndef,\n  clone$1 as clone,\n  colors,\n  createCacheObject,\n  createJSONParse,\n  createJSONStringify,\n  debounce,\n  decimalPlaces,\n  deferred,\n  exec,\n  getExtname,\n  getIteratorFn,\n  hasOwn,\n  hexToRgb,\n  hslToRgb,\n  idleCallback,\n  inlineString,\n  isAbsolute,\n  isArray,\n  isBase64,\n  isBrowser,\n  isBuffer,\n  isByteLength,\n  isCNPhone,\n  isDate,\n  isDomain,\n  isEmail,\n  isEmptyObject,\n  isFunction,\n  isIP,\n  isInBounds,\n  isMap,\n  isNil,\n  isNumber,\n  isObject,\n  isPhone,\n  isPlainObject,\n  isPort,\n  isPrimitiveValue,\n  isPromise,\n  isPromiseLike,\n  isRegExp,\n  isSet,\n  isString,\n  isTypedArray,\n  isWeakMap,\n  isWeakSet,\n  isWhitespace,\n  isWindow,\n  jsonParse,\n  jsonStringify,\n  last,\n  loopSlice,\n  makeMap,\n  map,\n  mathExprEvaluate,\n  merge,\n  noop,\n  now,\n  omit,\n  once,\n  pick,\n  qsParse,\n  qsStringify,\n  raf,\n  random,\n  randomColor,\n  remove,\n  retry,\n  rgbToAnsi256,\n  rgbToHex,\n  rgbToHsl,\n  root,\n  slash,\n  sleep,\n  sortKeys,\n  sortStrings,\n  supportWasm,\n  throttle,\n  toCamelCase,\n  toRawType,\n  unindent,\n  uniq,\n  uuid,\n};\n", "import {\n  isPlainObject,\n  assert,\n  isPromiseLike,\n  isPrimitiveValue,\n  uuid,\n  omit,\n  hasOwn,\n  pick,\n} from 'aidly';\n\nconst INTERNAL = Symbol('internal_hooks');\nconst INVALID_VALUE = Symbol('invalid_condition_value');\nconst PERFORMANCE_PLUGIN_PREFIX = '__performance_monitor__';\nconst isBrowser = typeof window !== 'undefined';\nlet taskId = 1;\nconst createTaskId = () => taskId++;\nlet monitorTaskId = 1;\nconst createMonitorTaskId = () => monitorTaskId++;\nlet monitorPluginId = 1;\nconst createMonitorPluginId = () => monitorPluginId++;\nconst checkReturnData = (originData, returnData) => {\n  if (!isPlainObject(returnData)) return false;\n  if (originData !== returnData) {\n    for (const key in originData) {\n      if (!(key in returnData)) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\nconst getTargetInArgs = (key, args) => {\n  let target = args;\n  const parts = key.split('.');\n  for (let i = 0, l = parts.length; i < l; i++) {\n    if (!target) return INVALID_VALUE;\n    let p = parts[i];\n    if (p.startsWith('[') && p.endsWith(']')) {\n      p = Number(p.slice(1, -1));\n    }\n    target = target[p];\n  }\n  return target;\n};\n\nclass SyncHook {\n  _locked;\n  context;\n  type;\n  listeners = new Set();\n  tags = new WeakMap();\n  errors = new Set();\n  before;\n  after;\n  // Only `context` is allowed to be passed in from outside\n  constructor(context, _type = 'SyncHook', _internal) {\n    this.type = _type;\n    this._locked = false;\n    this.context = typeof context === 'undefined' ? null : context;\n    // `before` and `after` hooks should not call other `before` and `after` hooks recursively,\n    // as it can lead to infinite loops.\n    if (_internal !== INTERNAL) {\n      this.before = new SyncHook(null, 'SyncHook', INTERNAL);\n      this.after = new SyncHook(null, 'SyncHook', INTERNAL);\n    }\n  }\n  /**\n   * @internal\n   */\n  _emitError(error, hook, tag) {\n    if (this.errors.size > 0) {\n      this.errors.forEach((fn) =>\n        fn({\n          tag,\n          hook,\n          error,\n          type: this.type,\n        }),\n      );\n    } else {\n      throw error;\n    }\n  }\n  /**\n   * Determine whether there is an executable callback function.\n   */\n  isEmpty() {\n    return this.listeners.size === 0;\n  }\n  /**\n   * By locking the current hook, you will no longer be able to add or remove callback functions from it.\n   */\n  lock() {\n    this._locked = true;\n    if (this.before) this.before.lock();\n    if (this.after) this.after.lock();\n    return this;\n  }\n  /**\n   * Unlock the current hook.\n   */\n  unlock() {\n    this._locked = false;\n    if (this.before) this.before.unlock();\n    if (this.after) this.after.unlock();\n    return this;\n  }\n  on(tag, fn) {\n    assert(!this._locked, 'The current hook is now locked.');\n    if (typeof tag === 'function') {\n      fn = tag;\n      tag = '';\n    }\n    assert(typeof fn === 'function', `Invalid parameter in \"${this.type}\".`);\n    if (tag && typeof tag === 'string') {\n      this.tags.set(fn, tag);\n    }\n    this.listeners.add(fn);\n    return this;\n  }\n  once(tag, fn) {\n    if (typeof tag === 'function') {\n      fn = tag;\n      tag = '';\n    }\n    const self = this;\n    this.on(tag, function wrapper(...args) {\n      self.remove(wrapper, INTERNAL);\n      return fn.apply(this, args);\n    });\n    return this;\n  }\n  /**\n   * trigger hooks.\n   */\n  emit(...data) {\n    if (this.listeners.size > 0) {\n      const id = createTaskId();\n      let map = null;\n      if (!this.after?.isEmpty()) {\n        map = Object.create(null);\n      }\n      this.before?.emit(id, this.type, this.context, data);\n      this.listeners.forEach((fn) => {\n        const tag = this.tags.get(fn);\n        if (map && tag) {\n          map[tag] = Date.now();\n        }\n        const record = () => {\n          if (map && tag) {\n            map[tag] = Date.now() - map[tag];\n          }\n        };\n        try {\n          fn.apply(this.context, data);\n          record();\n        } catch (e) {\n          record();\n          this._emitError(e, fn, tag);\n        }\n      });\n      // The data being mapped will only be meaningful if `after` is not empty.\n      this.after?.emit(id, this.type, this.context, data, map);\n    }\n  }\n  /**\n   * Remove all hooks.\n   */\n  remove(fn, _flag) {\n    if (_flag !== INTERNAL) {\n      assert(!this._locked, 'The current hook is now locked.');\n    }\n    this.listeners.delete(fn);\n    return this;\n  }\n  /**\n   * Remove a specific hook.\n   */\n  removeAll() {\n    assert(!this._locked, 'The current hook is now locked.');\n    this.listeners.clear();\n    return this;\n  }\n  /**\n   * Listen for errors when the hook is running.\n   */\n  listenError(fn) {\n    assert(!this._locked, 'The current hook is now locked.');\n    this.errors.add(fn);\n  }\n  /**\n   *  Clone a clean instance.\n   */\n  clone() {\n    return new this.constructor(\n      this.context,\n      this.type,\n      this.before ? null : INTERNAL,\n    );\n  }\n}\n\nclass AsyncHook extends SyncHook {\n  constructor(context) {\n    super(context, 'AsyncHook');\n  }\n  emit(...data) {\n    let id;\n    let result;\n    const ls = Array.from(this.listeners);\n    let map = null;\n    if (ls.length > 0) {\n      id = createTaskId();\n      if (!this.after?.isEmpty()) {\n        map = Object.create(null);\n      }\n      this.before?.emit(id, this.type, this.context, data);\n      let i = 0;\n      const call = (prev) => {\n        if (prev === false) {\n          return false; // Abort process\n        } else if (i < ls.length) {\n          let res;\n          const fn = ls[i++];\n          const tag = this.tags.get(fn);\n          if (map && tag) {\n            map[tag] = Date.now();\n          }\n          const record = () => {\n            if (map && tag) {\n              map[tag] = Date.now() - map[tag];\n            }\n          };\n          try {\n            res = fn.apply(this.context, data);\n          } catch (e) {\n            // If there is an error in the function call,\n            // there is no need to monitor the result of the promise.\n            record();\n            this._emitError(e, fn, tag);\n            return call(prev);\n          }\n          return Promise.resolve(res)\n            .finally(record)\n            .then(call)\n            .catch((e) => {\n              this._emitError(e, fn, tag);\n              return call(prev);\n            });\n        } else {\n          return prev;\n        }\n      };\n      result = call();\n    }\n    return Promise.resolve(result).then((result) => {\n      if (ls.length > 0) {\n        // The data being mapped will only be meaningful if `after` is not empty.\n        this.after?.emit(id, this.type, this.context, data, map);\n      }\n      return result;\n    });\n  }\n}\n\nclass SyncWaterfallHook extends SyncHook {\n  constructor(context) {\n    super(context, 'SyncWaterfallHook');\n  }\n  emit(data) {\n    assert(\n      isPlainObject(data),\n      `\"${this.type}\" hook response data must be an object.`,\n    );\n    if (this.listeners.size > 0) {\n      const id = createTaskId();\n      let map = null;\n      if (!this.after?.isEmpty()) {\n        map = Object.create(null);\n      }\n      this.before?.emit(id, this.type, this.context, [data]);\n      for (const fn of this.listeners) {\n        const tag = this.tags.get(fn);\n        if (map && tag) {\n          map[tag] = Date.now();\n        }\n        const record = () => {\n          if (map && tag) {\n            map[tag] = Date.now() - map[tag];\n          }\n        };\n        try {\n          const tempData = fn.call(this.context, data);\n          assert(\n            checkReturnData(data, tempData),\n            `The return value of hook \"${this.type}\" is incorrect.`,\n          );\n          data = tempData;\n          record();\n        } catch (e) {\n          record();\n          this._emitError(e, fn, tag);\n        }\n      }\n      this.after?.emit(id, this.type, this.context, [data], map);\n    }\n    return data;\n  }\n}\n\nclass AsyncParallelHook extends SyncHook {\n  constructor(context) {\n    super(context, 'AsyncParallelHook');\n  }\n  emit(...data) {\n    let id;\n    let map = null;\n    // Disclaimer in advance, `listeners` may change\n    const size = this.listeners.size;\n    const taskList = [];\n    if (size > 0) {\n      id = createTaskId();\n      if (!this.after?.isEmpty()) {\n        map = Object.create(null);\n      }\n      this.before?.emit(id, this.type, this.context, data);\n      for (const fn of this.listeners) {\n        taskList.push(\n          Promise.resolve().then(() => {\n            const tag = this.tags.get(fn);\n            if (map && tag) {\n              map[tag] = Date.now();\n            }\n            const record = () => {\n              if (map && tag) {\n                map[tag] = Date.now() - map[tag];\n              }\n            };\n            try {\n              const res = fn.apply(this.context, data);\n              if (isPromiseLike(res)) {\n                // `Thenable` may not provide `catch` method,\n                // It needs to be wrapped with a promise.\n                return Promise.resolve(res).catch((e) => {\n                  record();\n                  this._emitError(e, fn, tag);\n                  return null;\n                });\n              } else {\n                record();\n                return res;\n              }\n            } catch (e) {\n              this._emitError(e, fn, tag);\n              return null;\n            }\n          }),\n        );\n      }\n    }\n    return Promise.all(taskList).then(() => {\n      if (size > 0) {\n        this.after?.emit(id, this.type, this.context, data, map);\n      }\n    });\n  }\n}\n\nclass AsyncWaterfallHook extends SyncHook {\n  constructor(context) {\n    super(context, 'AsyncWaterfallHook');\n  }\n  emit(data) {\n    assert(\n      isPlainObject(data),\n      `\"${this.type}\" hook response data must be an object.`,\n    );\n    let i = 0;\n    let id;\n    let map = null;\n    const ls = Array.from(this.listeners);\n    if (ls.length > 0) {\n      id = createTaskId();\n      if (!this.after?.isEmpty()) {\n        map = Object.create(null);\n      }\n      this.before?.emit(id, this.type, this.context, [data]);\n      const call = (prev) => {\n        if (prev === false) {\n          return false;\n        } else {\n          assert(\n            checkReturnData(data, prev),\n            `The return value of hook \"${this.type}\" is incorrect.`,\n          );\n          data = prev;\n          if (i < ls.length) {\n            let res;\n            const fn = ls[i++];\n            const tag = this.tags.get(fn);\n            if (map && tag) {\n              map[tag] = Date.now();\n            }\n            const record = () => {\n              if (map && tag) {\n                map[tag] = Date.now() - map[tag];\n              }\n            };\n            try {\n              res = fn.call(this.context, prev);\n            } catch (e) {\n              // If there is an error in the function call,\n              // there is no need to monitor the result of the promise.\n              record();\n              this._emitError(e, fn, tag);\n              return call(prev);\n            }\n            return Promise.resolve(res)\n              .finally(record)\n              .then(call)\n              .catch((e) => {\n                this._emitError(e, fn, tag);\n                return call(prev);\n              });\n          }\n        }\n        return data;\n      };\n      return Promise.resolve(call(data)).then((data) => {\n        this.after?.emit(id, this.type, this.context, [data], map);\n        return data;\n      });\n    } else {\n      return Promise.resolve(data);\n    }\n  }\n}\n\nfunction createPerformance(plSys, defaultCondition) {\n  let hooks = {};\n  let closed = false;\n  const pluginName = `${PERFORMANCE_PLUGIN_PREFIX}${createMonitorPluginId()}`;\n  // If value is equivalent, it represents an event bus\n  // Note (need to guide users):\n  //  The `value` is recorded here,\n  //  but the value is unknown and there may be a memory leak.\n  //  The user needs to manually close the performance monitoring to clear it.\n  let records1 = new Map();\n  let records2 = Object.create(null);\n  // Some information about each time a monitor is created is recorded here.\n  let monitorTask = Object.create(null);\n  const findCondition = (key, conditions) => {\n    if (!conditions) return defaultCondition;\n    return conditions[key] || defaultCondition;\n  };\n  for (const key in plSys.lifecycle) {\n    hooks[key] = function (...args) {\n      let value;\n      for (const id in monitorTask) {\n        const [sk, ek, conditions, hook] = monitorTask[id];\n        const condition = findCondition(key, conditions);\n        if (key === ek) {\n          value = getTargetInArgs(condition, args);\n          if (value !== INVALID_VALUE) {\n            const prevObj = isPrimitiveValue(value)\n              ? records2[value]\n              : records1.get(value);\n            if (prevObj) {\n              const prevTime = prevObj[`${id}_${sk}`];\n              if (typeof prevTime === 'number') {\n                hook.emit({\n                  endArgs: args,\n                  endContext: this,\n                  events: [sk, ek],\n                  equalValue: value,\n                  time: Date.now() - prevTime,\n                });\n              }\n            }\n          }\n        }\n        if (key === sk) {\n          value = value || getTargetInArgs(condition, args);\n          if (value !== INVALID_VALUE) {\n            let obj;\n            const k = `${id}_${sk}`;\n            const t = Date.now();\n            if (isPrimitiveValue(value)) {\n              obj = records2[value];\n              if (!obj) {\n                obj = Object.create(null);\n                records2[value] = obj;\n              }\n            } else {\n              obj = records1.get(value);\n              if (!obj) {\n                obj = Object.create(null);\n                records1.set(value, obj);\n              }\n            }\n            obj[k] = t;\n          }\n        }\n      }\n    };\n  }\n  plSys.use({\n    hooks,\n    name: pluginName,\n  });\n  return {\n    /**\n     * Turn off performance monitoring.\n     */\n    close() {\n      if (!closed) {\n        closed = true;\n        records1.clear();\n        records2 = Object.create(null);\n        monitorTask = Object.create(null);\n        this._taskHooks.hs.forEach((hook) => hook.removeAll());\n        this._taskHooks.hs.clear();\n        plSys.remove(pluginName);\n      }\n    },\n    /**\n     * Add new observation task.\n     */\n    monitor(sk, ek, conditions) {\n      assert(!closed, 'Unable to add tasks to a closed performance observer.');\n      const id = createMonitorTaskId();\n      const hook = new SyncHook();\n      const task = [sk, ek, conditions, hook];\n      monitorTask[id] = task;\n      this._taskHooks.add(hook);\n      return hook;\n    },\n    _taskHooks: {\n      hs: new Set(),\n      watch: new Set(),\n      add(hook) {\n        this.hs.add(hook);\n        this.watch.forEach((fn) => fn(hook));\n      },\n    },\n  };\n}\n\n// If there is user defined performance data,\n// it should also be printed here.\nfunction logPerformance(p, performanceReceiver, tag) {\n  const _tag = `[${tag || 'debug'}_performance]`;\n  const fn = (e) => {\n    if (typeof performanceReceiver === 'function') {\n      performanceReceiver({ tag, e });\n    } else {\n      console.log(\n        `${_tag}(${e.events[0]} -> ${e.events[1]}): ${e.time}`,\n        e.endArgs,\n        e.endContext,\n      );\n    }\n  };\n  p._taskHooks.watch.add((hook) => hook.on(fn));\n  p._taskHooks.hs.forEach((hook) => hook.on(fn));\n}\nfunction createDebugger(plSys, options) {\n  let {\n    tag,\n    group,\n    filter,\n    receiver,\n    listenError,\n    logPluginTime,\n    errorReceiver,\n    performance,\n    performanceReceiver,\n  } = options;\n  let unsubscribeError = null;\n  let map = Object.create(null);\n  const _tag = `[${tag || 'debug'}]: `;\n  if (!('group' in options)) group = isBrowser;\n  if (!('listenError' in options)) listenError = true;\n  if (!('logPluginTime' in options)) logPluginTime = true;\n  if (performance) logPerformance(performance, performanceReceiver, tag);\n  const prefix = (e) => {\n    let p = `${_tag}${e.name}_${e.id}(t, args, ctx`;\n    p += logPluginTime ? ', pt)' : ')';\n    return p;\n  };\n  const unsubscribeBefore = plSys.beforeEach((e) => {\n    map[e.id] = { t: Date.now() };\n    if (typeof receiver !== 'function') {\n      console.time(prefix(e));\n      if (group) console.groupCollapsed(e.name);\n    }\n  });\n  const unsubscribeAfter = plSys.afterEach((e) => {\n    let t = null;\n    if (typeof filter === 'string') {\n      if (e.name.startsWith(filter)) {\n        if (group) console.groupEnd();\n        return;\n      }\n    } else if (typeof filter === 'function') {\n      t = Date.now() - map[e.id].t;\n      if (filter({ e, tag, time: t })) {\n        if (group) console.groupEnd();\n        return;\n      }\n    }\n    if (typeof receiver === 'function') {\n      if (t === null) {\n        t = Date.now() - map[e.id].t;\n      }\n      receiver({ e, tag, time: t });\n    } else {\n      console.timeLog(\n        prefix(e),\n        e.args,\n        e.context,\n        logPluginTime ? e.pluginExecTime : '',\n      );\n      if (group) console.groupEnd();\n    }\n  });\n  if (listenError) {\n    unsubscribeError = plSys.listenError((e) => {\n      if (typeof errorReceiver === 'function') {\n        errorReceiver(e);\n      } else {\n        console.error(\n          `[${tag}]: The error originated from \"${e.tag}.${e.name}(${e.type})\".\\n`,\n          `The hook function is: ${String(e.hook)}\\n\\n`,\n          e.error,\n        );\n      }\n    });\n  }\n  return () => {\n    unsubscribeBefore();\n    unsubscribeAfter();\n    if (unsubscribeError) {\n      unsubscribeError();\n    }\n    map = Object.create(null);\n    if (performance) {\n      performance.close();\n    }\n  };\n}\n\nconst HOOKS = {\n  SyncHook,\n  AsyncHook,\n  AsyncParallelHook,\n  SyncWaterfallHook,\n  AsyncWaterfallHook,\n};\nclass PluginSystem {\n  _locked;\n  _debugs;\n  _performances;\n  _lockListenSet;\n  lifecycle;\n  plugins;\n  constructor(lifecycle) {\n    this._locked = false;\n    this._debugs = new Set();\n    this._performances = new Set();\n    this._lockListenSet = new Set();\n    this.plugins = Object.create(null);\n    this.lifecycle = lifecycle || Object.create(null);\n  }\n  /**\n   * @internal\n   */\n  _onEmitLifeHook(type, fn) {\n    assert(\n      !this._locked,\n      `The plugin system is locked and cannot add \"${type}\" hook.`,\n    );\n    let map = Object.create(null);\n    for (const key in this.lifecycle) {\n      map[key] = (id, type, context, args, map) => {\n        // Disallow deleting `id` as it may cause confusion.\n        fn(\n          Object.freeze({\n            id,\n            type,\n            args,\n            context,\n            name: key,\n            pluginExecTime: map,\n          }),\n        );\n      };\n      this.lifecycle[key][type].on(map[key]);\n    }\n    return () => {\n      for (const key in this.lifecycle) {\n        this.lifecycle[key][type].remove(map[key]);\n      }\n      map = Object.create(null);\n    };\n  }\n  /**\n   * Observing the changes in `lock`.\n   */\n  listenLock(fn) {\n    this._lockListenSet.add(fn);\n  }\n  /**\n   * Lock the plugin system. After locking, you will not be able to register and uninstall plugins.\n   */\n  lock() {\n    this._locked = true;\n    for (const key in this.lifecycle) {\n      this.lifecycle[key].lock();\n    }\n    if (this._lockListenSet.size > 0) {\n      this._lockListenSet.forEach((fn) => fn(true));\n    }\n  }\n  /**\n   * Unlock the plugin system. After unlocking, you can re-register and uninstall plugins.\n   */\n  unlock() {\n    this._locked = false;\n    for (const key in this.lifecycle) {\n      this.lifecycle[key].unlock();\n    }\n    if (this._lockListenSet.size > 0) {\n      this._lockListenSet.forEach((fn) => fn(false));\n    }\n  }\n  /**\n   * Registers a (sync) callback to be called before each hook is being called.\n   */\n  beforeEach(fn) {\n    return this._onEmitLifeHook('before', fn);\n  }\n  /**\n   * Registers a (sync) callback to be called after each hook is being called.\n   */\n  afterEach(fn) {\n    return this._onEmitLifeHook('after', fn);\n  }\n  /**\n   * Monitor elapsed time between hooks.\n   */\n  performance(defaultCondition) {\n    assert(\n      !this._locked,\n      'The plugin system is locked and performance cannot be monitored.',\n    );\n    assert(\n      defaultCondition && typeof defaultCondition === 'string',\n      'A judgment `conditions` is required to use `performance`.',\n    );\n    const obj = createPerformance(this, defaultCondition);\n    const { close } = obj;\n    const fn = () => {\n      assert(\n        !this._locked,\n        'The plugin system is locked and removal operations are not allowed.',\n      );\n      this._performances.delete(fn);\n      return close.call(obj);\n    };\n    obj.close = fn;\n    this._performances.add(fn);\n    return obj;\n  }\n  /**\n   * Remove all performance monitoring.\n   */\n  removeAllPerformance() {\n    assert(\n      !this._locked,\n      'The plugin system is locked and removal operations are not allowed.',\n    );\n    this._performances.forEach((fn) => fn());\n  }\n  /**\n   * Add debugger.\n   */\n  debug(options = {}) {\n    assert(\n      !this._locked,\n      'The plugin system is locked and the debugger cannot be added.',\n    );\n    const close = createDebugger(this, options);\n    const fn = () => {\n      assert(\n        !this._locked,\n        'The plugin system is locked and removal operations are not allowed.',\n      );\n      this._debugs.delete(fn);\n      close();\n    };\n    this._debugs.add(fn);\n    return fn;\n  }\n  /**\n   * Remove all debug instances.\n   */\n  removeAllDebug() {\n    assert(\n      !this._locked,\n      'The plugin system is locked and removal operations are not allowed.',\n    );\n    this._debugs.forEach((fn) => fn());\n  }\n  /**\n   * Get the `apis` of a plugin.\n   */\n  getPluginApis(pluginName) {\n    return this.plugins[pluginName].apis;\n  }\n  /**\n   * Listen for errors when the hook is running.\n   */\n  listenError(fn) {\n    assert(\n      !this._locked,\n      'The plugin system is locked and cannot listen for errors.',\n    );\n    const map = Object.create(null);\n    for (const key in this.lifecycle) {\n      map[key] = (e) => {\n        fn(Object.assign(e, { name: key }));\n      };\n      this.lifecycle[key].listenError(map[key]);\n    }\n    return () => {\n      assert(\n        !this._locked,\n        'The plugin system is locked and the listening error cannot be removed.',\n      );\n      for (const key in this.lifecycle) {\n        this.lifecycle[key].errors.delete(map[key]);\n      }\n    };\n  }\n  useRefine(plugin) {\n    return this.use(plugin, INTERNAL);\n  }\n  use(plugin, _flag) {\n    assert(\n      !this._locked,\n      `The plugin system is locked and new plugins cannot be added${\n        plugin.name ? `(${plugin.name})` : ''\n      }.`,\n    );\n    if (typeof plugin === 'function') plugin = plugin(this);\n    assert(isPlainObject(plugin), 'Invalid plugin configuration.');\n    // Simplified version of the input\n    if (_flag === INTERNAL) {\n      plugin = {\n        version: plugin.version,\n        name: plugin.name || uuid(),\n        hooks: omit(plugin, ['name', 'version']),\n      };\n    }\n    const { name } = plugin;\n    assert(name && typeof name === 'string', 'Plugin must provide a \"name\".');\n    assert(!this.isUsed(name), `Repeat to register plugin hooks \"${name}\".`);\n    const register = (obj, once) => {\n      if (obj) {\n        for (const key in obj) {\n          assert(\n            hasOwn(this.lifecycle, key),\n            `\"${key}\" hook is not defined in plugin \"${name}\".`,\n          );\n          // The loss of built-in plugins for performance statistics is negligible\n          const tag = name.startsWith(PERFORMANCE_PLUGIN_PREFIX) ? '' : name;\n          if (once) {\n            this.lifecycle[key].once(tag, obj[key]);\n          } else {\n            this.lifecycle[key].on(tag, obj[key]);\n          }\n        }\n      }\n    };\n    register(plugin.hooks, false);\n    register(plugin.onceHooks, true);\n    this.plugins[name] = plugin;\n    return plugin;\n  }\n  /**\n   * Remove plugin.\n   */\n  remove(pluginName) {\n    assert(\n      !this._locked,\n      'The plugin system has been locked and the plugin cannot be cleared.',\n    );\n    assert(pluginName, 'Must provide a \"name\".');\n    if (hasOwn(this.plugins, pluginName)) {\n      const plugin = this.plugins[pluginName];\n      const rm = (obj) => {\n        if (obj) {\n          for (const key in obj) {\n            this.lifecycle[key].remove(obj[key]);\n          }\n        }\n      };\n      rm(plugin.hooks);\n      rm(plugin.onceHooks);\n      delete this.plugins[pluginName];\n    }\n  }\n  /**\n   * Select some of the lifycycle hooks.\n   */\n  pickLifyCycle(keys) {\n    return pick(this.lifecycle, keys);\n  }\n  /**\n   * Determine whether a plugin is registered.\n   */\n  isUsed(pluginName) {\n    assert(pluginName, 'Must provide a \"name\".');\n    return hasOwn(this.plugins, pluginName);\n  }\n  /**\n   * Create a new plugin system.\n   */\n  create(callback) {\n    return new PluginSystem(callback(HOOKS));\n  }\n  /**\n   * Clone a brand new pluginSystem instance.\n   */\n  clone(usePlugin) {\n    const newLifecycle = Object.create(null);\n    for (const key in this.lifecycle) {\n      newLifecycle[key] = this.lifecycle[key].clone();\n    }\n    const cloned = new this.constructor(newLifecycle);\n    if (usePlugin) {\n      for (const key in this.plugins) {\n        cloned.use(this.plugins[key]);\n      }\n    }\n    return cloned;\n  }\n}\n\nexport {\n  AsyncHook,\n  AsyncParallelHook,\n  AsyncWaterfallHook,\n  PluginSystem,\n  SyncHook,\n  SyncWaterfallHook,\n};\n", "/*!\n * danmu.js\n * (c) 2024-2025 Imtaotao\n * Released under the MIT License.\n */\nimport {\n  remove,\n  raf,\n  once,\n  mathExprEvaluate,\n  map,\n  assert,\n  now,\n  Queue,\n  batchProcess,\n  hasOwn,\n  loopSlice,\n  isInBounds,\n  isNumber,\n  random,\n  isEmptyObject,\n} from 'aidly';\nimport {\n  PluginSystem,\n  SyncHook,\n  SyncWaterfallHook,\n  AsyncHook,\n} from 'hooks-plugin';\n\nclass Track {\n  _container;\n  isLock = false;\n  index;\n  location;\n  list;\n  constructor({ index, list, location, container }) {\n    this.list = list;\n    this.index = index;\n    this.location = location;\n    this._container = container;\n  }\n  get width() {\n    return this._container.width;\n  }\n  get height() {\n    return this.location.bottom - this.location.top;\n  }\n  // We have to make a copy.\n  // During the loop, there are too many factors that change danmaku,\n  // which makes it impossible to guarantee the stability of the list.\n  each(fn) {\n    for (const dm of Array.from(this.list)) {\n      if (fn(dm) === false) break;\n    }\n  }\n  lock() {\n    this.isLock = true;\n  }\n  unlock() {\n    this.isLock = false;\n  }\n  clear() {\n    this.each((dm) => dm.destroy());\n  }\n  /**\n   * @internal\n   */\n  _add(dm) {\n    this.list.push(dm);\n  }\n  /**\n   * @internal\n   */\n  _remove(dm) {\n    remove(this.list, dm);\n  }\n  /**\n   * @internal\n   */\n  _updateLocation(location) {\n    this.location = location;\n  }\n  /**\n   * @internal\n   */\n  _last(li) {\n    for (let i = this.list.length - 1; i >= 0; i--) {\n      const dm = this.list[i - li];\n      if (dm && !dm.paused && dm.loops === 0 && dm.type === 'facile') {\n        return dm;\n      }\n    }\n    return null;\n  }\n}\n\nconst INTERNAL_FLAG = Symbol();\nconst ids = {\n  danmu: 1,\n  bridge: 1,\n  runtime: 1,\n  container: 1,\n};\nconst nextFrame = (fn) => raf(() => raf(fn));\nconst randomIdx = (founds, rows) => {\n  const n = Math.floor(Math.random() * rows);\n  return founds.has(n) ? randomIdx(founds, rows) : n;\n};\nconst toNumber = (val, all) => {\n  return mathExprEvaluate(val, {\n    units: {\n      px: (n) => n,\n      '%': (n) => (Number(n) / 100) * all,\n    },\n  });\n};\nconst whenTransitionEnds = (node) => {\n  return new Promise((resolve) => {\n    const onEnd = once(() => {\n      node.removeEventListener('transitionend', onEnd);\n      resolve();\n    });\n    node.addEventListener('transitionend', onEnd);\n  });\n};\n\nclass Container {\n  width = 0;\n  height = 0;\n  node;\n  parentNode = null;\n  _parentWidth = 0;\n  _parentHeight = 0;\n  _size = {\n    x: { start: 0, end: '100%' },\n    y: { start: 0, end: '100%' },\n  };\n  constructor() {\n    this.node = document.createElement('div');\n    this.node.setAttribute('data-danmu-container', String(ids.container++));\n    this.setStyle('overflow', 'hidden');\n    this.setStyle('position', 'relative');\n    this.setStyle('top', '0');\n    this.setStyle('left', '0');\n  }\n  /**\n   * @internal\n   */\n  _sizeToNumber() {\n    const size = Object.create(null);\n    const transform = (v, all) => {\n      return typeof v === 'string' ? (v ? toNumber(v, all) : 0) : v;\n    };\n    size.x = map(this._size.x, (v) => transform(v, this._parentWidth));\n    size.y = map(this._size.y, (v) => transform(v, this._parentHeight));\n    return size;\n  }\n  /**\n   * @internal\n   */\n  _mount(node) {\n    this._unmount();\n    this.parentNode = node;\n    this._format();\n    this.parentNode.appendChild(this.node);\n  }\n  /**\n   * @internal\n   */\n  _unmount() {\n    this.parentNode = null;\n    if (this.node.parentNode) {\n      this.node.parentNode.removeChild(this.node);\n    }\n  }\n  /**\n   * @internal\n   */\n  _updateSize({ x, y }) {\n    const isLegal = (v) => {\n      return typeof v === 'string' || typeof v === 'number';\n    };\n    if (x) {\n      if (isLegal(x.end)) this._size.x.end = x.end;\n      if (isLegal(x.start)) this._size.x.start = x.start;\n    }\n    if (y) {\n      if (isLegal(y.end)) this._size.y.end = y.end;\n      if (isLegal(y.start)) this._size.y.start = y.start;\n    }\n  }\n  /**\n   * @internal\n   */\n  _toNumber(p, val) {\n    let n = typeof val === 'number' ? val : toNumber(val, this[p]);\n    if (n > this[p]) n = this[p];\n    assert(!Number.isNaN(n), `${val} is not a number`);\n    return n;\n  }\n  /**\n   * @internal\n   */\n  _format() {\n    if (this.parentNode) {\n      const styles = getComputedStyle(this.parentNode);\n      this._parentWidth = Number(styles.width.replace('px', ''));\n      this._parentHeight = Number(styles.height.replace('px', ''));\n    }\n    const { x, y } = this._sizeToNumber();\n    this.width = x.end - x.start;\n    this.height = y.end - y.start;\n    this.setStyle('left', `${x.start}px`);\n    this.setStyle('top', `${y.start}px`);\n    this.setStyle('width', `${this.width}px`);\n    this.setStyle('height', `${this.height}px`);\n  }\n  setStyle(key, val) {\n    this.node.style[key] = val;\n  }\n}\n\nfunction createDanmakuLifeCycle() {\n  return new PluginSystem({\n    hide: new SyncHook(),\n    show: new SyncHook(),\n    pause: new SyncHook(),\n    resume: new SyncHook(),\n    beforeMove: new SyncHook(),\n    moved: new SyncHook(),\n    createNode: new SyncHook(),\n    appendNode: new SyncHook(),\n    removeNode: new SyncHook(),\n    beforeDestroy: new AsyncHook(),\n    destroyed: new SyncHook(),\n  });\n}\nfunction createManagerLifeCycle() {\n  const { lifecycle } = createDanmakuLifeCycle();\n  return new PluginSystem({\n    // Danmaku hooks\n    $show: lifecycle.show,\n    $hide: lifecycle.hide,\n    $pause: lifecycle.pause,\n    $resume: lifecycle.resume,\n    $beforeMove: lifecycle.beforeMove,\n    $moved: lifecycle.moved,\n    $createNode: lifecycle.createNode,\n    $appendNode: lifecycle.appendNode,\n    $removeNode: lifecycle.removeNode,\n    $beforeDestroy: lifecycle.beforeDestroy,\n    $destroyed: lifecycle.destroyed,\n    // Global hooks\n    format: new SyncHook(),\n    start: new SyncHook(),\n    stop: new SyncHook(),\n    show: new SyncHook(),\n    hide: new SyncHook(),\n    freeze: new SyncHook(),\n    unfreeze: new SyncHook(),\n    finished: new SyncHook(),\n    clear: new SyncHook(),\n    mount: new SyncHook(),\n    unmount: new SyncHook(),\n    init: new SyncHook(),\n    limitWarning: new SyncHook(),\n    push: new SyncHook(),\n    render: new SyncHook(),\n    updateOptions: new SyncHook(),\n    willRender: new SyncWaterfallHook(),\n  });\n}\nconst scope = '$';\nconst cache = [];\nfunction createDanmakuPlugin(plSys) {\n  const plugin = {\n    name: `__danmaku_plugin_${ids.bridge++}__`,\n  };\n  if (cache.length) {\n    for (const [k, nk] of cache) {\n      plugin[nk] = (...args) => {\n        return plSys.lifecycle[k].emit(...args);\n      };\n    }\n  } else {\n    const keys = Object.keys(plSys.lifecycle);\n    for (const k of keys) {\n      if (k.startsWith(scope)) {\n        const nk = k.replace(scope, '');\n        cache.push([k, nk]);\n        plugin[nk] = (...args) => {\n          return plSys.lifecycle[k].emit(...args);\n        };\n      }\n    }\n  }\n  return plugin;\n}\n\nclass FacileDanmaku {\n  _options;\n  data;\n  loops = 0;\n  isLoop = false;\n  paused = false;\n  moving = false;\n  isEnded = false;\n  isFixedDuration = false;\n  rate;\n  duration;\n  recorder;\n  nextFrame = nextFrame;\n  type = 'facile';\n  track = null;\n  node = null;\n  moveTimer = null;\n  position = { x: 0, y: 0 };\n  pluginSystem = createDanmakuLifeCycle();\n  _internalStatuses;\n  _initData;\n  constructor(_options) {\n    this._options = _options;\n    this.data = _options.data;\n    this.rate = _options.rate;\n    this.duration = _options.duration;\n    this._internalStatuses = _options.internalStatuses;\n    this._initData = {\n      duration: _options.duration,\n      width: _options.container.width,\n    };\n    this.recorder = {\n      pauseTime: 0,\n      startTime: 0,\n      prevPauseTime: 0,\n    };\n  }\n  /**\n   * @internal\n   */\n  _delInTrack() {\n    this._options.delInTrack(this);\n    if (this.track) {\n      this.track._remove(this);\n    }\n  }\n  /**\n   * @internal\n   */\n  _summaryWidth() {\n    return this._options.container.width + this.getWidth();\n  }\n  /**\n   * @internal\n   */\n  _getMovePercent() {\n    const { pauseTime, startTime, prevPauseTime } = this.recorder;\n    const ct = this.paused ? prevPauseTime : now();\n    return (ct - startTime - pauseTime) / this.actualDuration();\n  }\n  /**\n   * @internal\n   */\n  _getMoveDistance() {\n    if (!this.moving) return 0;\n    return this._getMovePercent() * this._summaryWidth();\n  }\n  /**\n   * @internal\n   */\n  _getSpeed() {\n    const cw = this._summaryWidth();\n    if (cw == null) return 0;\n    return cw / this.actualDuration();\n  }\n  /**\n   * @internal\n   */\n  _createNode() {\n    if (this.node) return;\n    this.node = document.createElement('div');\n    this._setStartStatus();\n    this.node.__danmaku__ = this;\n    this.pluginSystem.lifecycle.createNode.emit(this, this.node);\n  }\n  /**\n   * @internal\n   */\n  _appendNode(container) {\n    if (!this.node || this.node.parentNode === container) return;\n    container.appendChild(this.node);\n    this.pluginSystem.lifecycle.appendNode.emit(this, this.node);\n  }\n  /**\n   * @internal\n   */\n  _removeNode(_flag) {\n    if (!this.node) return;\n    const parentNode = this.node.parentNode;\n    if (!parentNode) return;\n    parentNode.removeChild(this.node);\n    if (_flag !== INTERNAL_FLAG) {\n      this.pluginSystem.lifecycle.removeNode.emit(this, this.node);\n    }\n  }\n  /**\n   * @internal\n   */\n  _setOff() {\n    return new Promise((resolve) => {\n      if (!this.node) {\n        this.moving = false;\n        this.isEnded = true;\n        resolve();\n        return;\n      }\n      for (const key in this._internalStatuses.styles) {\n        this.setStyle(key, this._internalStatuses.styles[key]);\n      }\n      const w = this.getWidth();\n      const cw = this._options.container.width + w;\n      const negative = this.direction === 'left' ? 1 : -1;\n      this._internalStatuses.viewStatus === 'hide'\n        ? this.hide(INTERNAL_FLAG)\n        : this.show(INTERNAL_FLAG);\n      this.setStyle('transform', `translateX(${negative * cw}px)`);\n      this.setStyle(\n        'transition',\n        `transform linear ${this.actualDuration()}ms`,\n      );\n      if (this.direction !== 'none') {\n        this.setStyle(this.direction, `-${w}px`);\n      }\n      this.moving = true;\n      this.recorder.startTime = now();\n      this.pluginSystem.lifecycle.beforeMove.emit(this);\n      whenTransitionEnds(this.node).then(() => {\n        this.loops++;\n        this.moving = false;\n        this.isEnded = true;\n        this.pluginSystem.lifecycle.moved.emit(this);\n        resolve();\n      });\n    });\n  }\n  /**\n   * @internal\n   */\n  _setStartStatus() {\n    this._internalStatuses.viewStatus === 'hide'\n      ? this.hide(INTERNAL_FLAG)\n      : this.show(INTERNAL_FLAG);\n    this.setStyle('zIndex', '0');\n    this.setStyle('opacity', '0');\n    this.setStyle('transform', '');\n    this.setStyle('transition', '');\n    this.setStyle('position', 'absolute');\n    this.setStyle('top', `${this.position.y}px`);\n    if (this.direction !== 'none') {\n      this.setStyle(this.direction, '0');\n    }\n  }\n  /**\n   * @internal\n   */\n  _updatePosition(p) {\n    if (typeof p.x === 'number') {\n      this.position.x = p.x;\n    }\n    if (typeof p.y === 'number') {\n      this.position.y = p.y;\n      this.setStyle('top', `${p.y}px`);\n    }\n  }\n  /**\n   * @internal\n   */\n  _updateTrack(track) {\n    this.track = track;\n    if (track) {\n      track._add(this);\n    }\n  }\n  /**\n   * @internal\n   */\n  _updateDuration(duration, updateInitData = true) {\n    this.isFixedDuration = true;\n    this.duration = duration;\n    if (updateInitData) {\n      this._initData.duration = duration;\n    }\n  }\n  /**\n   * @internal\n   */\n  _format(oldWidth, oldHeight, newTrack) {\n    if (this.isEnded) {\n      this.destroy();\n      return;\n    }\n    // Don't let the rendering of danmaku exceed the container\n    if (\n      this._options.container.height !== oldHeight &&\n      this.getHeight() + newTrack.location.bottom >\n        this._options.container.height\n    ) {\n      this.destroy();\n      return;\n    }\n    // As the x-axis varies, the motion area of danmu also changes\n    if (this._options.container.width !== oldWidth) {\n      const { width, duration } = this._initData;\n      const speed = (width + this.getWidth()) / duration;\n      this._updateDuration(this._summaryWidth() / speed, false);\n      if (!this.paused) {\n        this.pause(INTERNAL_FLAG);\n        this.resume(INTERNAL_FLAG);\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n  _reset() {\n    this.loops = 0;\n    this.paused = false;\n    this.moving = false;\n    this.position = { x: 0, y: 0 };\n    this._removeNode();\n    this._delInTrack();\n    this._setStartStatus();\n    this._updateTrack(null);\n    this.setStyle('top', '');\n    if (this.moveTimer) {\n      this.moveTimer.clear();\n      this.moveTimer = null;\n    }\n    this.recorder = {\n      pauseTime: 0,\n      startTime: 0,\n      prevPauseTime: 0,\n    };\n    this._initData = {\n      duration: this._options.duration,\n      width: this._options.container.width,\n    };\n  }\n  get direction() {\n    return this._options.direction;\n  }\n  // When our total distance remains constant,\n  // acceleration is inversely proportional to time.\n  actualDuration() {\n    return this.duration / this.rate;\n  }\n  setloop() {\n    this.isLoop = true;\n  }\n  unloop() {\n    this.isLoop = false;\n  }\n  getHeight() {\n    return (this.node && this.node.clientHeight) || 0;\n  }\n  getWidth() {\n    return (this.node && this.node.clientWidth) || 0;\n  }\n  pause(_flag) {\n    if (!this.moving || this.paused) return;\n    let d = this._getMoveDistance();\n    if (Number.isNaN(d)) return;\n    const negative = this.direction === 'left' ? 1 : -1;\n    this.paused = true;\n    this.recorder.prevPauseTime = now();\n    this.setStyle('zIndex', '2');\n    this.setStyle('transitionDuration', '0ms');\n    this.setStyle('transform', `translateX(${d * negative}px)`);\n    if (_flag !== INTERNAL_FLAG) {\n      this.pluginSystem.lifecycle.pause.emit(this);\n    }\n  }\n  resume(_flag) {\n    if (!this.moving || !this.paused) return;\n    const cw = this._summaryWidth();\n    const negative = this.direction === 'left' ? 1 : -1;\n    const remainingTime = (1 - this._getMovePercent()) * this.actualDuration();\n    this.paused = false;\n    this.recorder.pauseTime += now() - this.recorder.prevPauseTime;\n    this.recorder.prevPauseTime = 0;\n    this.setStyle('zIndex', '0');\n    this.setStyle('transitionDuration', `${remainingTime}ms`);\n    this.setStyle('transform', `translateX(${cw * negative}px)`);\n    if (_flag !== INTERNAL_FLAG) {\n      this.pluginSystem.lifecycle.resume.emit(this);\n    }\n  }\n  hide(_flag) {\n    this.setStyle('visibility', 'hidden');\n    this.setStyle('pointerEvents', 'none');\n    if (_flag !== INTERNAL_FLAG) {\n      this.pluginSystem.lifecycle.hide.emit(this);\n    }\n  }\n  show(_flag) {\n    this.setStyle('visibility', 'visible');\n    this.setStyle('pointerEvents', 'auto');\n    if (_flag !== INTERNAL_FLAG) {\n      this.pluginSystem.lifecycle.show.emit(this);\n    }\n  }\n  async destroy(mark) {\n    await this.pluginSystem.lifecycle.beforeDestroy.emit(this, mark);\n    this.moving = false;\n    this._delInTrack();\n    this._removeNode();\n    if (this.moveTimer) {\n      this.moveTimer.clear();\n      this.moveTimer = null;\n    }\n    this.pluginSystem.lifecycle.destroyed.emit(this, mark);\n    this.node = null;\n  }\n  setStyle(key, val) {\n    if (!this.node) return;\n    this.node.style[key] = val;\n  }\n  remove(pluginName) {\n    this.pluginSystem.remove(pluginName);\n  }\n  use(plugin) {\n    if (typeof plugin === 'function') plugin = plugin(this);\n    if (!plugin.name) {\n      plugin.name = `__facile_danmaku_plugin_${ids.danmu++}__`;\n    }\n    this.pluginSystem.useRefine(plugin);\n    return plugin;\n  }\n}\n\nclass FlexibleDanmaku extends FacileDanmaku {\n  _options;\n  position;\n  type = 'flexible';\n  constructor(_options) {\n    super(_options);\n    this._options = _options;\n    this.position = _options.position || { x: 0, y: 0 };\n  }\n  /**\n   * @internal\n   */\n  _getSpeed() {\n    if (this.direction === 'none') return 0;\n    const { duration } = this._initData;\n    const cw =\n      this.direction === 'right'\n        ? this.position.x + this.getWidth()\n        : this.position.x;\n    return cw / duration;\n  }\n  /**\n   * @internal\n   */\n  _setOff() {\n    return new Promise((resolve) => {\n      if (!this.node) {\n        this.moving = false;\n        this.isEnded = true;\n        resolve();\n        return;\n      }\n      const onEnd = () => {\n        this.loops++;\n        this.moving = false;\n        this.isEnded = true;\n        if (this.moveTimer) {\n          this.moveTimer.clear();\n          this.moveTimer = null;\n        }\n        this.pluginSystem.lifecycle.moved.emit(this);\n        resolve();\n      };\n      for (const key in this._internalStatuses.styles) {\n        this.setStyle(key, this._internalStatuses.styles[key]);\n      }\n      this.moving = true;\n      this.recorder.startTime = now();\n      this.pluginSystem.lifecycle.beforeMove.emit(this);\n      if (this.direction === 'none') {\n        let timer = setTimeout(onEnd, this.actualDuration());\n        this.moveTimer = {\n          cb: onEnd,\n          clear() {\n            clearTimeout(timer);\n            timer = null;\n          },\n        };\n      } else {\n        const ex =\n          this.direction === 'left'\n            ? this._options.container.width\n            : -this.getWidth();\n        this.setStyle(\n          'transition',\n          `transform linear ${this.actualDuration()}ms`,\n        );\n        this.setStyle(\n          'transform',\n          `translateX(${ex}px) translateY(${this.position.y}px)`,\n        );\n        whenTransitionEnds(this.node).then(onEnd);\n      }\n    });\n  }\n  /**\n   * @internal\n   */\n  _setStartStatus() {\n    this.setStyle('zIndex', '1');\n    this.setStyle('transform', '');\n    this.setStyle('transition', '');\n    this.setStyle('position', 'absolute');\n    this.setStyle(\n      'transform',\n      `translateX(${this.position.x}px) translateY(${this.position.y}px)`,\n    );\n    this._internalStatuses.viewStatus === 'hide'\n      ? this.hide(INTERNAL_FLAG)\n      : this.show(INTERNAL_FLAG);\n  }\n  /**\n   * @internal\n   */\n  _updatePosition(p) {\n    let needUpdateStyle = false;\n    if (typeof p.x === 'number') {\n      this.position.x = p.x;\n      needUpdateStyle = true;\n    }\n    if (typeof p.y === 'number') {\n      this.position.y = p.y;\n      needUpdateStyle = true;\n    }\n    if (needUpdateStyle) {\n      this.setStyle(\n        'transform',\n        `translateX(${this.position.x}px) translateY(${this.position.y}px)`,\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  _getMovePercent(useInitData) {\n    const { pauseTime, startTime, prevPauseTime } = this.recorder;\n    const ct = this.paused ? prevPauseTime : now();\n    const moveTime = ct - startTime - pauseTime;\n    return (\n      moveTime /\n      (useInitData\n        ? this._initData.duration / this.rate\n        : this.actualDuration())\n    );\n  }\n  /**\n   * @internal\n   */\n  _getMoveDistance() {\n    if (!this.moving) return 0;\n    let d;\n    let { x } = this.position;\n    const diff = this._initData.width - this._options.container.width;\n    if (this.direction === 'none') {\n      d = x - diff;\n    } else {\n      const percent = this._getMovePercent(true);\n      if (this.direction === 'left') {\n        // When the container changes and the direction of movement is to the right,\n        // there is no need for any changes\n        d = x + (this._options.container.width - x) * percent;\n      } else {\n        d = x - (x + this.getWidth()) * percent - diff;\n      }\n    }\n    return d;\n  }\n  /**\n   * @internal\n   */\n  _format() {\n    if (this.direction === 'left') return;\n    if (this.direction === 'none') {\n      this.setStyle(\n        'transform',\n        `translateX(${this._getMoveDistance()}px) translateY(${this.position.y}px)`,\n      );\n      return;\n    }\n    const diff = this._initData.width - this._options.container.width;\n    const cw = this.position.x + this.getWidth();\n    this._updateDuration((cw - diff) / this._getSpeed(), false);\n    if (this.paused) {\n      this.resume(INTERNAL_FLAG);\n      this.pause(INTERNAL_FLAG);\n    } else {\n      this.pause(INTERNAL_FLAG);\n      this.resume(INTERNAL_FLAG);\n    }\n  }\n  pause(_flag) {\n    if (!this.moving || this.paused) return;\n    this.paused = true;\n    this.recorder.prevPauseTime = now();\n    if (this.direction === 'none') {\n      if (this.moveTimer) this.moveTimer.clear();\n    } else {\n      this.setStyle('zIndex', '3');\n      this.setStyle('transitionDuration', '0ms');\n      this.setStyle(\n        'transform',\n        `translateX(${this._getMoveDistance()}px) translateY(${this.position.y}px)`,\n      );\n    }\n    if (_flag !== INTERNAL_FLAG) {\n      this.pluginSystem.lifecycle.pause.emit(this);\n    }\n  }\n  resume(_flag) {\n    if (!this.moving || !this.paused) return;\n    this.paused = false;\n    this.recorder.pauseTime += now() - this.recorder.prevPauseTime;\n    this.recorder.prevPauseTime = 0;\n    const remainingTime = (1 - this._getMovePercent()) * this.actualDuration();\n    if (this.direction === 'none') {\n      if (this.moveTimer) {\n        let timer = setTimeout(this.moveTimer.cb || (() => {}), remainingTime);\n        this.moveTimer.clear = () => {\n          clearTimeout(timer);\n          timer = null;\n        };\n      }\n    } else {\n      const ex =\n        this.direction === 'left'\n          ? this._options.container.width\n          : -this.getWidth();\n      this.setStyle('zIndex', '1');\n      this.setStyle('transitionDuration', `${remainingTime}ms`);\n      this.setStyle(\n        'transform',\n        `translateX(${ex}px) translateY(${this.position.y}px)`,\n      );\n    }\n    if (_flag !== INTERNAL_FLAG) {\n      this.pluginSystem.lifecycle.resume.emit(this);\n    }\n  }\n  remove(pluginName) {\n    this.pluginSystem.remove(pluginName);\n  }\n  use(plugin) {\n    if (typeof plugin === 'function') plugin = plugin(this);\n    if (!plugin.name) {\n      plugin.name = `__flexible_danmaku_plugin_${ids.danmu++}__`;\n    }\n    this.pluginSystem.useRefine(plugin);\n    return plugin;\n  }\n}\n\nclass Engine {\n  _options;\n  rows = 0;\n  container = new Container();\n  tracks = [];\n  _fx = new Queue();\n  _sets = {\n    view: new Set(),\n    flexible: new Set(),\n    stash: [],\n  };\n  // Avoid frequent deletion of danmaku.\n  // collect the danmaku that need to be deleted within 2 seconds and delete them together.\n  _addDestroyQueue = batchProcess({\n    ms: 3000,\n    processor: (ls) => ls.forEach((dm) => dm.destroy()),\n  });\n  constructor(_options) {\n    this._options = _options;\n  }\n  len() {\n    const { stash, view, flexible } = this._sets;\n    return {\n      stash: stash.length,\n      flexible: flexible.size,\n      view: view.size + flexible.size,\n      all: view.size + flexible.size + stash.length,\n    };\n  }\n  add(data, options, isUnshift) {\n    const val = data instanceof FacileDanmaku ? data : { data, options };\n    this._sets.stash[isUnshift ? 'unshift' : 'push'](val);\n  }\n  updateOptions(newOptions) {\n    this._options = Object.assign(this._options, newOptions);\n    if (hasOwn(newOptions, 'gap')) {\n      this._options.gap = this.container._toNumber('width', this._options.gap);\n    }\n    if (hasOwn(newOptions, 'trackHeight')) {\n      this.format();\n    }\n  }\n  clear(type) {\n    if (!type || type === 'facile') {\n      for (let i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].clear();\n      }\n      this._sets.view.clear();\n      this._sets.stash.length = 0;\n    }\n    if (!type || type === 'flexible') {\n      for (const dm of this._sets.flexible) {\n        dm.destroy();\n      }\n      this._sets.flexible.clear();\n    }\n  }\n  // `flexible` and `view` are both xx,\n  // so deleting some of them in the loop will not affect\n  each(fn) {\n    for (const dm of this._sets.flexible) {\n      if (!dm.isEnded) {\n        if (fn(dm) === false) return;\n      }\n    }\n    for (const dm of this._sets.view) {\n      if (!dm.isEnded) {\n        if (fn(dm) === false) return;\n      }\n    }\n  }\n  // Because there are copies brought by `Array.from`,\n  // deleting it in all loops will not affect\n  asyncEach(fn) {\n    let stop = false;\n    const arr = Array.from(this._sets.flexible);\n    return loopSlice(\n      arr.length,\n      (i) => {\n        if (!arr[i].isEnded) {\n          if (fn(arr[i]) === false) {\n            stop = true;\n            return false;\n          }\n        }\n      },\n      17,\n    ).then(() => {\n      if (stop) return;\n      const arr = Array.from(this._sets.view);\n      return loopSlice(\n        arr.length,\n        (i) => {\n          if (!arr[i].isEnded) {\n            return fn(arr[i]);\n          }\n        },\n        17,\n      );\n    });\n  }\n  format() {\n    const { width, height } = this.container;\n    this.container._format();\n    const { gap, trackHeight } = this._options;\n    this._options.gap = this.container._toNumber('width', gap);\n    const h = this.container._toNumber('height', trackHeight);\n    if (h <= 0) {\n      for (let i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].clear();\n      }\n      return;\n    }\n    const rows = (this.rows = +(this.container.height / h).toFixed(0));\n    for (let i = 0; i < rows; i++) {\n      const track = this.tracks[i];\n      const top = h * i;\n      const bottom = h * (i + 1) - 1;\n      const middle = (bottom - top) / 2 + top;\n      const location = { top, middle, bottom };\n      if (bottom > this.container.height) {\n        this.rows--;\n        if (track) {\n          this.tracks[i].clear();\n          this.tracks.splice(i, 1);\n        }\n      } else if (track) {\n        // If the reused track is larger than the container height,\n        // the overflow needs to be deleted.\n        if (track.location.middle > this.container.height) {\n          this.tracks[i].clear();\n        } else {\n          track.each((dm) => {\n            dm._format(width, height, track);\n          });\n        }\n        track._updateLocation(location);\n      } else {\n        const track = new Track({\n          index: i,\n          list: [],\n          location,\n          container: this.container,\n        });\n        this.tracks.push(track);\n      }\n    }\n    // Delete the extra tracks and the danmaku inside\n    if (this.tracks.length > this.rows) {\n      for (let i = this.rows; i < this.tracks.length; i++) {\n        this.tracks[i].clear();\n      }\n      this.tracks.splice(this.rows, this.tracks.length - this.rows);\n    }\n    // If `flexible` danmaku is also outside the view, it also needs to be deleted\n    for (const dm of this._sets.flexible) {\n      if (dm.position.y > this.container.height) {\n        dm.destroy();\n      } else if (width !== this.container.width) {\n        dm._format();\n      }\n    }\n  }\n  renderFlexibleDanmaku(data, options, { hooks, statuses, danmakuPlugin }) {\n    assert(this.container, 'Container not formatted');\n    hooks.render.call(null, 'flexible');\n    const dm = this._create('flexible', data, options, statuses);\n    if (dm.position.x > this.container.width) return false;\n    if (dm.position.y > this.container.height) return false;\n    if (options.plugin) dm.use(options.plugin);\n    dm.use(danmakuPlugin);\n    const { prevent } = hooks.willRender.call(null, {\n      type: 'flexible',\n      danmaku: dm,\n      prevent: false,\n      trackIndex: null,\n    });\n    if (this._options.rate > 0 && prevent !== true) {\n      const setup = () => {\n        dm._createNode();\n        this._sets.flexible.add(dm);\n        this._setAction(dm, statuses).then((isFreeze) => {\n          if (isFreeze) {\n            console.error(\n              'Currently in a freeze state, unable to render \"FlexibleDanmaku\"',\n            );\n            return;\n          }\n          if (dm.isLoop) {\n            dm._setStartStatus();\n            setup();\n            return;\n          }\n          dm.destroy();\n          if (this.len().all === 0) {\n            hooks.finished.call(null);\n          }\n        });\n      };\n      setup();\n      return true;\n    }\n    return false;\n  }\n  renderFacileDanmaku({ hooks, statuses, danmakuPlugin }) {\n    const { mode, limits } = this._options;\n    const launch = () => {\n      const num = this.len();\n      let l = num.stash;\n      if (typeof limits.view === 'number') {\n        const max = limits.view - num.view;\n        if (l > max) l = max;\n      }\n      if (mode === 'strict' && l > this.rows) {\n        l = this.rows;\n      }\n      if (l <= 0) return;\n      hooks.render.call(null, 'facile');\n      return loopSlice(l, () =>\n        this._consumeFacileDanmaku(statuses, danmakuPlugin, hooks),\n      );\n    };\n    if (mode === 'strict') {\n      this._fx.add((next) => {\n        const p = launch();\n        p ? p.then(next) : next();\n      });\n    } else {\n      launch();\n    }\n  }\n  _consumeFacileDanmaku(statuses, danmakuPlugin, hooks) {\n    let dm;\n    const layer = this._sets.stash.shift();\n    if (!layer) return;\n    const track = this._getTrack();\n    if (!track) {\n      this._sets.stash.unshift(layer);\n      // If there is nothing to render, return `false` to stop the loop.\n      return false;\n    }\n    if (layer instanceof FacileDanmaku) {\n      dm = layer;\n    } else {\n      dm = this._create('facile', layer.data, layer.options, statuses);\n      if (layer.options.plugin) {\n        dm.use(layer.options.plugin);\n      }\n      dm.use(danmakuPlugin);\n    }\n    const { prevent } = hooks.willRender.call(null, {\n      type: 'facile',\n      danmaku: dm,\n      prevent: false,\n      trackIndex: track.index,\n    });\n    // When the rate is less than or equal to 0,\n    // the danmaku will never move, but it will be rendered,\n    // so just don't render it here.\n    if (this._options.rate > 0 && prevent !== true) {\n      // First createNode, users may add styles\n      dm._createNode();\n      dm._appendNode(this.container.node);\n      dm._updateTrack(track);\n      const setup = () => {\n        this._sets.view.add(dm);\n        this._setAction(dm, statuses).then((isStash) => {\n          if (isStash) {\n            dm._reset();\n            this._sets.view.delete(dm);\n            this._sets.stash.unshift(dm);\n            return;\n          }\n          if (dm.isLoop) {\n            dm._setStartStatus();\n            setup();\n            return;\n          }\n          this._addDestroyQueue(dm);\n          if (this.len().all === 0) {\n            hooks.finished.call(null);\n          }\n        });\n      };\n      // Waiting for the style to take effect,\n      // we need to get the danmaku screen height.\n      let i = 0;\n      const triggerSetup = () => {\n        nextFrame(() => {\n          const height = dm.getHeight();\n          if (height === 0 && ++i < 20) {\n            triggerSetup();\n          } else {\n            const y = track.location.middle - height / 2;\n            if (y + height > this.container.height) return;\n            dm._updatePosition({ y });\n            setup();\n          }\n        });\n      };\n      triggerSetup();\n    }\n  }\n  _setAction(cur, internalStatuses) {\n    return new Promise((resolve) => {\n      nextFrame(() => {\n        if (internalStatuses.freeze === true) {\n          resolve(true);\n          return;\n        }\n        const { mode, durationRange } = this._options;\n        if (cur.type === 'facile') {\n          const speed = this._calculateSpeed(cur._options.speed);\n          if (speed) {\n            cur._updateDuration(cur._summaryWidth() / speed, true);\n          } else if (mode === 'strict' || mode === 'adaptive') {\n            assert(cur.track, 'Track not found');\n            const prev = cur.track._last(1);\n            if (prev && cur.loops === 0) {\n              const fixTime = this._collisionPrediction(prev, cur);\n              if (fixTime !== null) {\n                if (isInBounds(durationRange, fixTime)) {\n                  cur._updateDuration(fixTime, true);\n                } else if (mode === 'strict') {\n                  resolve(true);\n                  return;\n                }\n              }\n            }\n          }\n        } else if (cur.type === 'flexible') {\n          cur.use({\n            appendNode: () => {\n              const speed = this._calculateSpeed(cur._options.speed);\n              if (speed) {\n                cur._updateDuration(\n                  (cur.position.x + cur.getWidth()) / speed,\n                  true,\n                );\n              }\n            },\n          });\n        }\n        cur._appendNode(this.container.node);\n        nextFrame(() => {\n          if (internalStatuses.freeze === true) {\n            cur._removeNode(INTERNAL_FLAG);\n            resolve(true);\n          } else {\n            cur._setOff().then(() => resolve(false));\n          }\n        });\n      });\n    });\n  }\n  _create(type, data, options, internalStatuses) {\n    assert(this.container, 'Container not formatted');\n    const config = {\n      data,\n      internalStatuses,\n      rate: options.rate,\n      speed: options.speed,\n      container: this.container,\n      duration: options.duration,\n      direction: options.direction,\n      delInTrack: (b) => {\n        remove(this._sets.view, b);\n        type === 'facile'\n          ? remove(this._sets.stash, b)\n          : remove(this._sets.flexible, b);\n      },\n    };\n    if (type === 'facile') {\n      // Create FacileDanmaku\n      return new FacileDanmaku(config);\n    } else {\n      // Create FlexibleDanmaku\n      const dm = new FlexibleDanmaku(config);\n      const { position } = options;\n      // If it is a function, the position will be updated after the node is created,\n      // so that the function can get accurate danmaku data.\n      if (typeof position === 'function') {\n        dm.use({\n          appendNode: () => {\n            let { x, y } = position(dm, this.container);\n            x = this.container._toNumber('width', x);\n            y = this.container._toNumber('height', y);\n            dm._updatePosition({ x, y });\n          },\n        });\n      } else {\n        const x = this.container._toNumber('width', position.x);\n        const y = this.container._toNumber('height', position.y);\n        dm._updatePosition({ x, y });\n      }\n      return dm;\n    }\n  }\n  _calculateSpeed(s) {\n    if (s && typeof s === 'string') {\n      s = this.container._toNumber('width', s);\n      assert(\n        isNumber(s) && s > 0,\n        `The speed must > 0, but the current value is \"${s}\"`,\n      );\n    }\n    return s;\n  }\n  _getTrack(founds = new Set(), prev) {\n    if (this.rows === 0) return null;\n    const { gap, mode } = this._options;\n    if (founds.size === this.tracks.length) {\n      return mode === 'adaptive' ? prev || null : null;\n    }\n    const i = randomIdx(founds, this.rows);\n    const track = this.tracks[i];\n    if (!track.isLock) {\n      if (mode === 'none') {\n        return track;\n      }\n      const last = track._last(0);\n      if (!last) {\n        return track;\n      }\n      const lastWidth = last.getWidth();\n      if (lastWidth > 0 && last._getMoveDistance() >= gap + lastWidth) {\n        return track;\n      }\n    }\n    founds.add(i);\n    return this._getTrack(founds, track);\n  }\n  _collisionPrediction(prv, cur) {\n    const cs = cur._getSpeed();\n    const ps = prv._getSpeed();\n    const acceleration = cs - ps;\n    if (acceleration <= 0) return null;\n    const cw = cur.getWidth();\n    const pw = prv.getWidth();\n    const { gap } = this._options;\n    const distance = prv._getMoveDistance() - cw - pw - gap;\n    const collisionTime = distance / acceleration;\n    if (collisionTime >= cur.duration) return null;\n    assert(this.container, 'Container not formatted');\n    const remainingTime = (1 - prv._getMovePercent()) * prv.duration;\n    const currentFixTime = ((cw + gap) * remainingTime) / this.container.width;\n    return remainingTime + currentFixTime;\n  }\n}\n\nclass Manager {\n  options;\n  version = '0.16.0-beta-1747551295980.0';\n  nextFrame = nextFrame;\n  statuses = Object.create(null);\n  pluginSystem = createManagerLifeCycle();\n  _engine;\n  _renderTimer = null;\n  _internalStatuses = Object.create(null);\n  constructor(options) {\n    this.options = options;\n    this._engine = new Engine(options);\n    this._internalStatuses.freeze = false;\n    this._internalStatuses.viewStatus = 'show';\n    this._internalStatuses.styles = Object.create(null);\n    this._internalStatuses.styles.opacity = '';\n    this.pluginSystem.lifecycle.init.emit(this);\n  }\n  /**\n   * @internal\n   */\n  _mergeOptions(pushOptions) {\n    const options = pushOptions ? pushOptions : Object.create(null);\n    if (!('rate' in options)) {\n      options.rate = this.options.rate;\n    }\n    if (!('speed' in options)) {\n      options.speed = this.options.speed;\n    }\n    if (!('direction' in options)) {\n      options.direction = this.options.direction;\n    }\n    if (!('duration' in options)) {\n      const duration = random(...this.options.durationRange);\n      assert(duration > 0, `Invalid duration \"${duration}\"`);\n      options.duration = duration;\n    }\n    return options;\n  }\n  /**\n   * @internal\n   */\n  _setViewStatus(status, filter) {\n    return new Promise((resolve) => {\n      if (this._internalStatuses.viewStatus === status) {\n        resolve();\n        return;\n      }\n      this._internalStatuses.viewStatus = status;\n      this.pluginSystem.lifecycle[status].emit();\n      this._engine\n        .asyncEach((b) => {\n          if (this._internalStatuses.viewStatus === status) {\n            if (!filter || filter(b) !== true) {\n              b[status]();\n            }\n          } else {\n            return false;\n          }\n        })\n        .then(resolve);\n    });\n  }\n  get container() {\n    return this._engine.container;\n  }\n  get trackCount() {\n    return this._engine.tracks.length;\n  }\n  len() {\n    return this._engine.len();\n  }\n  isShow() {\n    return this._internalStatuses.viewStatus === 'show';\n  }\n  isFreeze() {\n    return this._internalStatuses.freeze === true;\n  }\n  isPlaying() {\n    return this._renderTimer !== null;\n  }\n  isDanmaku(dm) {\n    return dm instanceof FacileDanmaku || dm instanceof FlexibleDanmaku;\n  }\n  each(fn) {\n    this._engine.each(fn);\n  }\n  asyncEach(fn) {\n    return this._engine.asyncEach(fn);\n  }\n  getTrack(i) {\n    i = i >= 0 ? i : this.trackCount + i;\n    return this._engine.tracks[i];\n  }\n  freeze({ preventEvents = [] } = {}) {\n    let stopFlag;\n    let pauseFlag;\n    if (preventEvents.includes('stop')) {\n      stopFlag = INTERNAL_FLAG;\n    }\n    if (preventEvents.includes('pause')) {\n      pauseFlag = INTERNAL_FLAG;\n    }\n    this.stopPlaying(stopFlag);\n    this.each((dm) => dm.pause(pauseFlag));\n    this._internalStatuses.freeze = true;\n    this.pluginSystem.lifecycle.freeze.emit();\n  }\n  unfreeze({ preventEvents = [] } = {}) {\n    let startFlag;\n    let resumeFlag;\n    if (preventEvents.includes('start')) {\n      startFlag = INTERNAL_FLAG;\n    }\n    if (preventEvents.includes('resume')) {\n      resumeFlag = INTERNAL_FLAG;\n    }\n    this.each((dm) => dm.resume(resumeFlag));\n    this.startPlaying(startFlag);\n    this._internalStatuses.freeze = false;\n    this.pluginSystem.lifecycle.unfreeze.emit();\n  }\n  format() {\n    this._engine.format();\n    this.pluginSystem.lifecycle.format.emit();\n  }\n  mount(parentNode, { clear = true } = {}) {\n    if (parentNode) {\n      if (typeof parentNode === 'string') {\n        const res = document.querySelector(parentNode);\n        assert(res, `Invalid selector \"${parentNode}\"`);\n        parentNode = res;\n      }\n      if (this.isPlaying()) {\n        clear && this.clear(null, INTERNAL_FLAG);\n      }\n      this._engine.container._mount(parentNode);\n      this.format();\n      this.pluginSystem.lifecycle.mount.emit(parentNode);\n    }\n  }\n  unmount() {\n    const { parentNode } = this.container;\n    this.container._unmount();\n    this.pluginSystem.lifecycle.unmount.emit(parentNode);\n  }\n  clear(type, _flag) {\n    this._engine.clear(type);\n    if (_flag !== INTERNAL_FLAG) {\n      this.pluginSystem.lifecycle.clear.emit(type);\n    }\n  }\n  updateOptions(newOptions, key) {\n    this._engine.updateOptions(newOptions);\n    this.options = Object.assign(this.options, newOptions);\n    if (hasOwn(newOptions, 'interval')) {\n      this.stopPlaying(INTERNAL_FLAG);\n      this.startPlaying(INTERNAL_FLAG);\n    }\n    this.pluginSystem.lifecycle.updateOptions.emit(newOptions, key);\n  }\n  startPlaying(_flag) {\n    if (this.isPlaying()) return;\n    if (_flag !== INTERNAL_FLAG) {\n      this.pluginSystem.lifecycle.start.emit();\n    }\n    const cycle = () => {\n      this._renderTimer = setTimeout(cycle, this.options.interval);\n      this.render();\n    };\n    cycle();\n  }\n  stopPlaying(_flag) {\n    if (!this.isPlaying()) return;\n    if (this._renderTimer) {\n      clearTimeout(this._renderTimer);\n    }\n    this._renderTimer = null;\n    if (_flag !== INTERNAL_FLAG) {\n      this.pluginSystem.lifecycle.stop.emit();\n    }\n  }\n  show(filter) {\n    return this._setViewStatus('show', filter);\n  }\n  hide(filter) {\n    return this._setViewStatus('hide', filter);\n  }\n  canPush(type) {\n    let res = true;\n    const isFacile = type === 'facile';\n    const { limits } = this.options;\n    const { stash, view } = this._engine.len();\n    if (isFacile) {\n      res = stash < limits.stash;\n    } else if (typeof limits.view === 'number') {\n      res = view < limits.view;\n    }\n    return res;\n  }\n  unshift(data, options) {\n    return this.push(data, options, INTERNAL_FLAG);\n  }\n  push(data, options, _unshift) {\n    if (!this.canPush('facile')) {\n      const { stash } = this.options.limits;\n      const hook = this.pluginSystem.lifecycle.limitWarning;\n      !hook.isEmpty()\n        ? hook.emit('facile', stash)\n        : console.warn(\n            `The number of danmu in temporary storage exceeds the limit (${stash})`,\n          );\n      return false;\n    }\n    const isUnshift = _unshift === INTERNAL_FLAG;\n    if (!this.isDanmaku(data)) {\n      options = this._mergeOptions(options);\n    }\n    this._engine.add(data, options, isUnshift);\n    this.pluginSystem.lifecycle.push.emit(data, 'facile', isUnshift);\n    return true;\n  }\n  pushFlexibleDanmaku(data, options) {\n    if (!this.isPlaying()) return false;\n    if (typeof options.duration === 'number' && options.duration < 0) {\n      return false;\n    }\n    if (!this.canPush('flexible')) {\n      const { view } = this.options.limits;\n      const hook = this.pluginSystem.lifecycle.limitWarning;\n      !hook.isEmpty()\n        ? hook.emit('flexible', view || 0)\n        : console.warn(\n            `The number of danmu in view exceeds the limit (${view})`,\n          );\n      return false;\n    }\n    const res = this._engine.renderFlexibleDanmaku(\n      data,\n      this._mergeOptions(options),\n      {\n        statuses: this._internalStatuses,\n        danmakuPlugin: createDanmakuPlugin(this.pluginSystem),\n        hooks: {\n          finished: () => this.pluginSystem.lifecycle.finished.emit(),\n          render: (val) => this.pluginSystem.lifecycle.render.emit(val),\n          willRender: (val) => this.pluginSystem.lifecycle.willRender.emit(val),\n        },\n      },\n    );\n    if (res) {\n      this.pluginSystem.lifecycle.push.emit(data, 'flexible', false);\n      return true;\n    }\n    return false;\n  }\n  updateOccludedUrl(url, el) {\n    let set;\n    if (el) {\n      if (typeof el === 'string') {\n        const res = document.querySelector(el);\n        assert(res, `Invalid selector \"${el}\"`);\n        el = res;\n      }\n      set = (key, val) => (el.style[key] = val);\n    } else {\n      set = (key, val) => this.container.setStyle(key, val);\n    }\n    if (url) {\n      assert(typeof url === 'string', `Invalid url \"${url}\"`);\n      set('maskImage', `url(\"${url}\")`);\n      set('webkitMaskImage', `url(\"${url}\")`);\n      set('maskSize', 'cover');\n      set('webkitMaskSize', 'cover');\n    } else {\n      set('maskImage', 'none');\n      set('webkitMaskImage', 'none');\n    }\n  }\n  render() {\n    this._engine.renderFacileDanmaku({\n      statuses: this._internalStatuses,\n      danmakuPlugin: createDanmakuPlugin(this.pluginSystem),\n      hooks: {\n        finished: () => this.pluginSystem.lifecycle.finished.emit(),\n        render: (val) => this.pluginSystem.lifecycle.render.emit(val),\n        willRender: (val) => this.pluginSystem.lifecycle.willRender.emit(val),\n      },\n    });\n  }\n  remove(pluginName) {\n    this.pluginSystem.remove(pluginName);\n  }\n  use(plugin) {\n    if (typeof plugin === 'function') plugin = plugin(this);\n    if (!plugin.name) {\n      plugin.name = `__runtime_plugin_${ids.runtime++}__`;\n    }\n    this.pluginSystem.useRefine(plugin);\n    return plugin;\n  }\n  setStyle(key, val) {\n    const { styles } = this._internalStatuses;\n    if (styles[key] !== val) {\n      styles[key] = val;\n      this._engine.asyncEach((dm) => {\n        if (dm.moving) {\n          dm.setStyle(key, val);\n        }\n      });\n    }\n  }\n  setOpacity(opacity) {\n    if (typeof opacity === 'string') {\n      opacity = Number(opacity);\n    }\n    if (opacity < 0) {\n      opacity = 0;\n    } else if (opacity > 1) {\n      opacity = 1;\n    }\n    this.setStyle('opacity', String(opacity));\n  }\n  setArea(size) {\n    if (!isEmptyObject(size)) {\n      this._engine.container._updateSize(size);\n      this.format();\n    }\n  }\n  setGap(gap) {\n    this.updateOptions({ gap }, 'gap');\n  }\n  setMode(mode) {\n    this.updateOptions({ mode }, 'mode');\n  }\n  setSpeed(speed) {\n    this.updateOptions({ speed }, 'speed');\n  }\n  setRate(rate) {\n    if (rate !== this.options.rate) {\n      this.updateOptions({ rate }, 'rate');\n    }\n  }\n  setInterval(interval) {\n    this.updateOptions({ interval }, 'interval');\n  }\n  setTrackHeight(trackHeight) {\n    this.updateOptions({ trackHeight }, 'trackHeight');\n  }\n  setDurationRange(durationRange) {\n    this.updateOptions({ durationRange }, 'durationRange');\n  }\n  setDirection(direction) {\n    this.updateOptions({ direction }, 'direction');\n  }\n  setLimits({ view, stash }) {\n    let needUpdate = false;\n    const limits = Object.assign({}, this.options.limits);\n    if (typeof view === 'number') {\n      needUpdate = true;\n      limits.view = view;\n    }\n    if (typeof stash === 'number') {\n      needUpdate = true;\n      limits.stash = stash;\n    }\n    if (needUpdate) {\n      this.updateOptions({ limits }, 'limits');\n    }\n  }\n}\n\nconst formatOptions = (options) => {\n  const newOptions = Object.assign(\n    {\n      gap: 0,\n      rate: 1,\n      limits: {},\n      interval: 500,\n      mode: 'strict',\n      direction: 'right',\n      trackHeight: '20%',\n      durationRange: [4000, 6000],\n    },\n    options,\n  );\n  assert(newOptions.gap >= 0, 'Gap must be greater than or equal to 0');\n  if (typeof newOptions.limits.stash !== 'number') {\n    newOptions.limits.stash = Infinity;\n  }\n  return newOptions;\n};\nfunction create(options) {\n  const opts = formatOptions(options);\n  const manager = new Manager(opts);\n  if (opts.plugin) {\n    const plugins = Array.isArray(opts.plugin) ? opts.plugin : [opts.plugin];\n    for (const plugin of plugins) {\n      manager.use(plugin);\n    }\n    manager.pluginSystem.lifecycle.init.emit(manager);\n  }\n  return manager;\n}\n\nexport { create };\n"],
  "mappings": "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",
  "names": ["map", "value", "self", "map", "result", "_a", "data", "performance", "type", "once", "arr", "track", "last"]
}
