import type { Prettify } from './types';
export interface QsStringifyOptions {
  encode?: boolean;
  addQueryPrefix?: boolean;
  commaRoundTrip?: boolean;
  arrayFormat?: keyof typeof arrayPrefixFns;
}
export interface QsParseOptions {
  comma: boolean;
  depth: number;
  arrayLimit: number;
  allowSparse: boolean;
}
declare const arrayPrefixFns: {
  comma: (p: string) => string;
  repeat: (p: string) => string;
  brackets: (p: string) => string;
  indices: (p: string, k: string) => string;
};
export declare const qsParse: <T = Record<PropertyKey, unknown>>(
  s?: unknown,
  options?: Prettify<Partial<QsParseOptions>>,
) => T;
export declare const qsStringify: (
  obj: unknown,
  options?: QsStringifyOptions,
) => string;
export {};
